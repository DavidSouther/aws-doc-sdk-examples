************* Module cross_service/README.md/**/*.py
cross_service/README.md/**/*.py:1:0: F0001: No module named cross_service/README.md/**/*.py (fatal)
************* Module chalicelib.covid_data
cross_service/apigateway_covid-19_tracker/chalicelib/covid_data.py:124:29: W0613: Unused argument 'state' (unused-argument)
cross_service/apigateway_covid-19_tracker/chalicelib/covid_data.py:145:30: W0613: Unused argument 'state' (unused-argument)
************* Module conftest
cross_service/apigateway_covid-19_tracker/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
cross_service/apigateway_covid-19_tracker/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_app
cross_service/apigateway_covid-19_tracker/test/test_app.py:39:8: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
cross_service/apigateway_covid-19_tracker/test/test_app.py:83:8: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
cross_service/apigateway_covid-19_tracker/test/test_app.py:10:0: W0611: Unused import chalicelib (unused-import)
************* Module test_covid_data
cross_service/apigateway_covid-19_tracker/test/test_covid_data.py:15:11: W0212: Access to a protected member _table of a client class (protected-access)

-----------------------------------
Your code has been rated at 9.57/10

************* Module conftest
cross_service/apigateway_websocket_chat/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
cross_service/apigateway_websocket_chat/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_lambda_chat
cross_service/apigateway_websocket_chat/test/test_lambda_chat.py:62:18: W0613: Unused argument 'monkeypatch' (unused-argument)
cross_service/apigateway_websocket_chat/test/test_lambda_chat.py:144:0: R0913: Too many arguments (9/5) (too-many-arguments)
************* Module test_websocket_chat
cross_service/apigateway_websocket_chat/test/test_websocket_chat.py:129:0: R0914: Too many local variables (16/15) (too-many-locals)

-----------------------------------
Your code has been rated at 9.74/10

************* Module conftest
cross_service/aurora_item_tracker/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
cross_service/aurora_item_tracker/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_app
cross_service/aurora_item_tracker/test/test_app.py:14:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
cross_service/aurora_item_tracker/test/test_app.py:15:4: R0913: Too many arguments (6/5) (too-many-arguments)
cross_service/aurora_item_tracker/test/test_app.py:64:4: R0913: Too many arguments (6/5) (too-many-arguments)
cross_service/aurora_item_tracker/test/test_app.py:84:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/aurora_item_tracker/test/test_app.py:147:19: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:176:25: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:187:19: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:217:25: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:234:22: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:261:28: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:272:33: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:280:22: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:285:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/aurora_item_tracker/test/test_app.py:290:22: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:295:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/aurora_item_tracker/test/test_app.py:307:22: W0621: Redefining name 'mock_mgr' from outer scope (line 138) (redefined-outer-name)
cross_service/aurora_item_tracker/test/test_app.py:312:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)

-----------------------------------
Your code has been rated at 8.52/10

************* Module app
cross_service/aurora_rest_lending_library/library_api/app.py:31:4: W0603: Using the global statement (global-statement)
cross_service/aurora_rest_lending_library/library_api/app.py:39:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
cross_service/aurora_rest_lending_library/library_api/app.py:42:12: W0707: Consider explicitly re-raising using 'raise RequestTimeoutError(err) from err' (raise-missing-from)
************* Module aurora_tools
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:24:0: R0903: Too few public methods (1/2) (too-few-public-methods)
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:55:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:95:0: R0913: Too many arguments (8/5) (too-many-arguments)
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:120:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:12:0: C0411: standard import "import json" should be placed before "from demo_tools.custom_waiter import CustomWaiter, WaitState" (wrong-import-order)
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:13:0: C0411: standard import "import logging" should be placed before "from demo_tools.custom_waiter import CustomWaiter, WaitState" (wrong-import-order)
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:14:0: C0411: standard import "import sys" should be placed before "from demo_tools.custom_waiter import CustomWaiter, WaitState" (wrong-import-order)
cross_service/aurora_rest_lending_library/rds_tools/aurora_tools.py:16:0: C0411: third party import "from botocore.exceptions import ClientError" should be placed before "from demo_tools.custom_waiter import CustomWaiter, WaitState" (wrong-import-order)

-----------------------------------
Your code has been rated at 8.85/10

************* Module conftest
cross_service/dynamodb_item_tracker/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
cross_service/dynamodb_item_tracker/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_app
cross_service/dynamodb_item_tracker/test/test_app.py:18:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)
cross_service/dynamodb_item_tracker/test/test_app.py:19:4: R0913: Too many arguments (6/5) (too-many-arguments)
cross_service/dynamodb_item_tracker/test/test_app.py:18:0: R0903: Too few public methods (0/2) (too-few-public-methods)
cross_service/dynamodb_item_tracker/test/test_app.py:79:19: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:95:25: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:105:18: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:121:24: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:136:19: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:154:25: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:171:18: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:195:24: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:218:22: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:218:32: W0613: Unused argument 'monkeypatch' (unused-argument)
cross_service/dynamodb_item_tracker/test/test_app.py:233:28: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:233:38: W0613: Unused argument 'monkeypatch' (unused-argument)
cross_service/dynamodb_item_tracker/test/test_app.py:248:22: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:260:12: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/dynamodb_item_tracker/test/test_app.py:267:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/dynamodb_item_tracker/test/test_app.py:248:32: W0613: Unused argument 'monkeypatch' (unused-argument)
cross_service/dynamodb_item_tracker/test/test_app.py:272:22: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:289:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/dynamodb_item_tracker/test/test_app.py:272:32: W0613: Unused argument 'monkeypatch' (unused-argument)
cross_service/dynamodb_item_tracker/test/test_app.py:297:22: W0621: Redefining name 'mock_mgr' from outer scope (line 63) (redefined-outer-name)
cross_service/dynamodb_item_tracker/test/test_app.py:309:12: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/dynamodb_item_tracker/test/test_app.py:316:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
cross_service/dynamodb_item_tracker/test/test_app.py:297:32: W0613: Unused argument 'monkeypatch' (unused-argument)
cross_service/dynamodb_item_tracker/test/test_app.py:8:0: W0611: Unused import json (unused-import)

------------------------------------------------------------------
Your code has been rated at 8.00/10 (previous run: 8.52/10, -0.52)

************* Module analysis
cross_service/photo_analyzer/api/analysis.py:12:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module photo
cross_service/photo_analyzer/api/photo.py:11:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module report
cross_service/photo_analyzer/api/report.py:113:12: W0107: Unnecessary pass statement (unnecessary-pass)

-----------------------------------
Your code has been rated at 9.80/10

************* Module rek-moderator
cross_service/rekognition_content_moderation/src/rek-moderator.py:1:0: C0103: Module name "rek-moderator" doesn't conform to snake_case naming style (invalid-name)
cross_service/rekognition_content_moderation/src/rek-moderator.py:20:0: C0103: Function name "getModerationForUrl" doesn't conform to snake_case naming style (invalid-name)
cross_service/rekognition_content_moderation/src/rek-moderator.py:51:11: W0718: Catching too general exception Exception (broad-exception-caught)
cross_service/rekognition_content_moderation/src/rek-moderator.py:35:12: C0103: Variable name "readBytes" doesn't conform to snake_case naming style (invalid-name)
cross_service/rekognition_content_moderation/src/rek-moderator.py:67:4: C0103: Variable name "moderationResponse" doesn't conform to snake_case naming style (invalid-name)
cross_service/rekognition_content_moderation/src/rek-moderator.py:55:26: W0613: Unused argument 'context' (unused-argument)

-----------------------------------
Your code has been rated at 8.33/10

************* Module conftest
cross_service/resilient_service/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
cross_service/resilient_service/test/conftest.py:24:0: R0902: Too many instance attributes (26/7) (too-many-instance-attributes)
cross_service/resilient_service/test/conftest.py:25:4: R0913: Too many arguments (7/5) (too-many-arguments)
cross_service/resilient_service/test/conftest.py:24:0: R0903: Too few public methods (0/2) (too-few-public-methods)
cross_service/resilient_service/test/conftest.py:89:0: R0903: Too few public methods (0/2) (too-few-public-methods)
cross_service/resilient_service/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:10:0: C0411: standard import "from datetime import datetime" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:12:0: C0411: third party import "import boto3" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:13:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:14:0: C0411: third party import "import runner" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:15:0: C0411: third party import "from auto_scaler import AutoScaler" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:16:0: C0411: third party import "from load_balancer import LoadBalancer" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:17:0: C0411: third party import "from parameters import ParameterHelper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
cross_service/resilient_service/test/conftest.py:18:0: C0411: third party import "from recommendation_service import RecommendationService" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_demo
cross_service/resilient_service/test/test_demo.py:17:0: R0903: Too few public methods (1/2) (too-few-public-methods)
cross_service/resilient_service/test/test_demo.py:202:14: W0621: Redefining name 'mock_mgr' from outer scope (line 198) (redefined-outer-name)
cross_service/resilient_service/test/test_demo.py:245:0: R0913: Too many arguments (6/5) (too-many-arguments)
cross_service/resilient_service/test/test_demo.py:245:20: W0621: Redefining name 'mock_mgr' from outer scope (line 198) (redefined-outer-name)
cross_service/resilient_service/test/test_demo.py:245:30: W0613: Unused argument 'caplog' (unused-argument)
cross_service/resilient_service/test/test_demo.py:245:45: W0613: Unused argument 'stub_name' (unused-argument)
cross_service/resilient_service/test/test_demo.py:11:0: W0611: Unused ClientError imported from botocore.exceptions (unused-import)
************* Module test_deploy
cross_service/resilient_service/test/test_deploy.py:17:0: R0903: Too few public methods (1/2) (too-few-public-methods)
cross_service/resilient_service/test/test_deploy.py:188:16: W0621: Redefining name 'mock_mgr' from outer scope (line 184) (redefined-outer-name)
cross_service/resilient_service/test/test_deploy.py:254:0: R0913: Too many arguments (6/5) (too-many-arguments)
cross_service/resilient_service/test/test_deploy.py:254:22: W0621: Redefining name 'mock_mgr' from outer scope (line 184) (redefined-outer-name)
cross_service/resilient_service/test/test_deploy.py:254:32: W0613: Unused argument 'capsys' (unused-argument)
cross_service/resilient_service/test/test_deploy.py:254:60: W0613: Unused argument 'stub_name' (unused-argument)
cross_service/resilient_service/test/test_deploy.py:11:0: W0611: Unused ClientError imported from botocore.exceptions (unused-import)
************* Module test_destroy
cross_service/resilient_service/test/test_destroy.py:11:0: R0903: Too few public methods (1/2) (too-few-public-methods)
cross_service/resilient_service/test/test_destroy.py:139:17: W0621: Redefining name 'mock_mgr' from outer scope (line 135) (redefined-outer-name)
cross_service/resilient_service/test/test_destroy.py:139:27: W0613: Unused argument 'capsys' (unused-argument)
cross_service/resilient_service/test/test_destroy.py:174:23: W0621: Redefining name 'mock_mgr' from outer scope (line 135) (redefined-outer-name)
cross_service/resilient_service/test/test_destroy.py:174:33: W0613: Unused argument 'caplog' (unused-argument)
cross_service/resilient_service/test/test_destroy.py:174:48: W0613: Unused argument 'stub_name' (unused-argument)
cross_service/resilient_service/test/test_destroy.py:6:0: W0611: Unused ClientError imported from botocore.exceptions (unused-import)
************* Module test_runner_integ
cross_service/resilient_service/test/test_runner_integ.py:1:0: R0801: Similar lines in 2 files
==test_demo:[54:61]
==test_destroy:[34:41]
            )
            runner.add(
                self.scenario_data.elb.stubber.stub_describe_target_groups,
                [self.scenario_data.tg_name],
                [self.scenario_data.tg_arn],
            )
            runner.add( (duplicate-code)
cross_service/resilient_service/test/test_runner_integ.py:1:0: R0801: Similar lines in 2 files
==conftest:[51:58]
==test_demo:[128:135]
                        "MinSize": 3,
                        "MaxSize": 3,
                        "DesiredCapacity": 0,
                        "DefaultCooldown": 0,
                        "AvailabilityZones": ["test-zone"],
                        "HealthCheckType": "EC2",
                        "CreatedTime": datetime.now(), (duplicate-code)

-----------------------------------
Your code has been rated at 8.55/10

************* Module conftest
cross_service/stepfunctions_messenger/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
cross_service/stepfunctions_messenger/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.84/10

************* Module test-texttract-comprehend
cross_service/textract_comprehend_notebook/test-texttract-comprehend.py:1:0: C0103: Module name "test-texttract-comprehend" doesn't conform to snake_case naming style (invalid-name)

-----------------------------------
Your code has been rated at 9.62/10

************* Module conftest
cross_service/textract_explorer/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
cross_service/textract_explorer/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_textract_wrapper
cross_service/textract_explorer/test/test_textract_wrapper.py:27:18: W0613: Unused argument 'monkeypatch' (unused-argument)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:20: C0103: Argument name "Fileobj" doesn't conform to snake_case naming style (invalid-name)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:29: C0103: Argument name "Bucket" doesn't conform to snake_case naming style (invalid-name)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:37: C0103: Argument name "Key" doesn't conform to snake_case naming style (invalid-name)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:42: C0103: Argument name "ExtraArgs" doesn't conform to snake_case naming style (invalid-name)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:53: C0103: Argument name "Callback" doesn't conform to snake_case naming style (invalid-name)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:63: C0103: Argument name "Config" doesn't conform to snake_case naming style (invalid-name)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:4: R0913: Too many arguments (6/5) (too-many-arguments)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:42: W0613: Unused argument 'ExtraArgs' (unused-argument)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:53: W0613: Unused argument 'Callback' (unused-argument)
cross_service/textract_explorer/test/test_textract_wrapper.py:91:63: W0613: Unused argument 'Config' (unused-argument)

-----------------------------------
Your code has been rated at 9.07/10

************* Module conftest
example_code/acm/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/acm/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/acm/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/acm/test/conftest.py:9:0: W0611: Unused import random (unused-import)

-----------------------------------
Your code has been rated at 9.71/10

************* Module aws_service
example_code/api-gateway/aws_service/aws_service.py:87:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/api-gateway/aws_service/aws_service.py:102:4: R0913: Too many arguments (8/5) (too-many-arguments)
example_code/api-gateway/aws_service/aws_service.py:199:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/api-gateway/aws_service/aws_service.py:242:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/api-gateway/aws_service/aws_service.py:287:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/api-gateway/aws_service/aws_service.py:375:4: W3101: Missing timeout argument for method 'requests.post' can cause your program to hang indefinitely (missing-timeout)
example_code/api-gateway/aws_service/aws_service.py:379:4: W3101: Missing timeout argument for method 'requests.post' can cause your program to hang indefinitely (missing-timeout)
example_code/api-gateway/aws_service/aws_service.py:387:4: W3101: Missing timeout argument for method 'requests.post' can cause your program to hang indefinitely (missing-timeout)
example_code/api-gateway/aws_service/aws_service.py:392:15: W3101: Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely (missing-timeout)
example_code/api-gateway/aws_service/aws_service.py:395:11: W3101: Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely (missing-timeout)

-----------------------------------
Your code has been rated at 9.43/10

************* Module conftest
example_code/auditmanager/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/auditmanager/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/auditmanager/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/auditmanager/test/conftest.py:9:0: W0611: Unused import random (unused-import)
************* Module test_create_assessment_report
example_code/auditmanager/test/test_create_assessment_report.py:114:0: R0913: Too many arguments (8/5) (too-many-arguments)
example_code/auditmanager/test/test_create_assessment_report.py:114:0: R0914: Too many local variables (16/15) (too-many-locals)

-----------------------------------
Your code has been rated at 9.61/10

************* Module conftest
example_code/aurora/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/aurora/test/conftest.py:21:0: R0903: Too few public methods (0/2) (too-few-public-methods)
example_code/aurora/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/aurora/test/conftest.py:10:0: C0411: standard import "import uuid" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/aurora/test/conftest.py:12:0: C0411: third party import "import boto3" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/aurora/test/conftest.py:13:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/aurora/test/conftest.py:14:0: C0411: third party import "import scenario_get_started_aurora" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/aurora/test/conftest.py:15:0: C0411: third party import "from aurora_wrapper import AuroraWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_get_started_aurora_cleanup
example_code/aurora/test/test_get_started_aurora_cleanup.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/aurora/test/test_get_started_aurora_cleanup.py:49:17: W0621: Redefining name 'mock_mgr' from outer scope (line 45) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_cleanup.py:69:23: W0621: Redefining name 'mock_mgr' from outer scope (line 45) (redefined-outer-name)
************* Module test_get_started_aurora_create_cluster
example_code/aurora/test/test_get_started_aurora_create_cluster.py:8:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)
example_code/aurora/test/test_get_started_aurora_create_cluster.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/aurora/test/test_get_started_aurora_create_cluster.py:68:31: W0621: Redefining name 'mock_mgr' from outer scope (line 64) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_create_cluster.py:81:34: W0621: Redefining name 'mock_mgr' from outer scope (line 64) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_create_cluster.py:103:30: W0621: Redefining name 'mock_mgr' from outer scope (line 64) (redefined-outer-name)
************* Module test_get_started_aurora_create_instance
example_code/aurora/test/test_get_started_aurora_create_instance.py:8:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
example_code/aurora/test/test_get_started_aurora_create_instance.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/aurora/test/test_get_started_aurora_create_instance.py:60:32: W0621: Redefining name 'mock_mgr' from outer scope (line 56) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_create_instance.py:73:25: W0621: Redefining name 'mock_mgr' from outer scope (line 56) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_create_instance.py:95:31: W0621: Redefining name 'mock_mgr' from outer scope (line 56) (redefined-outer-name)
************* Module test_get_started_aurora_create_parameter_group
example_code/aurora/test/test_get_started_aurora_create_parameter_group.py:8:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
example_code/aurora/test/test_get_started_aurora_create_parameter_group.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/aurora/test/test_get_started_aurora_create_parameter_group.py:54:39: W0621: Redefining name 'mock_mgr' from outer scope (line 50) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_create_parameter_group.py:71:42: W0621: Redefining name 'mock_mgr' from outer scope (line 50) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_create_parameter_group.py:95:48: W0621: Redefining name 'mock_mgr' from outer scope (line 50) (redefined-outer-name)
************* Module test_get_started_aurora_create_snapshot
example_code/aurora/test/test_get_started_aurora_create_snapshot.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/aurora/test/test_get_started_aurora_create_snapshot.py:34:25: W0621: Redefining name 'mock_mgr' from outer scope (line 30) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_create_snapshot.py:50:31: W0621: Redefining name 'mock_mgr' from outer scope (line 30) (redefined-outer-name)
************* Module test_get_started_aurora_display_connection
example_code/aurora/test/test_get_started_aurora_display_connection.py:4:0: W0611: Unused import pytest (unused-import)
************* Module test_get_started_aurora_set_user_parameters
example_code/aurora/test/test_get_started_aurora_set_user_parameters.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/aurora/test/test_get_started_aurora_set_user_parameters.py:54:29: W0621: Redefining name 'mock_mgr' from outer scope (line 50) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_set_user_parameters.py:72:35: W0621: Redefining name 'mock_mgr' from outer scope (line 50) (redefined-outer-name)
example_code/aurora/test/test_get_started_aurora_set_user_parameters.py:1:0: R0801: Similar lines in 2 files
==test_get_started_aurora_cleanup:[14:22]
==test_get_started_aurora_create_snapshot:[13:21]
        self.scenario_out = None
        answers = ["y"]
        input_mocker.mock_answers(answers)
        self.stub_runner = stub_runner

    def setup_stubs(self, error, stop_on, stubber):
        with self.stub_runner(error, stop_on) as runner:
            runner.add( (duplicate-code)

-----------------------------------
Your code has been rated at 8.71/10

************* Module conftest
example_code/auto-scaling/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/auto-scaling/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/auto-scaling/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/auto-scaling/test/conftest.py:9:0: W0611: Unused import random (unused-import)
************* Module test_scenario_groups_and_instances
example_code/auto-scaling/test/test_scenario_groups_and_instances.py:35:0: R0914: Too many local variables (28/15) (too-many-locals)
example_code/auto-scaling/test/test_scenario_groups_and_instances.py:35:0: R0915: Too many statements (60/50) (too-many-statements)
example_code/auto-scaling/test/test_scenario_groups_and_instances.py:1:0: R0801: Similar lines in 2 files
==test_action_wrapper:[216:227]
==test_scenario_groups_and_instances:[76:86]
    activities = [
        {
            "ActivityId": f"test-id-{index}",
            "AutoScalingGroupName": "test-group",
            "Cause": "RunningTest",
            "StartTime": datetime.now(),
            "StatusCode": "Testing",
        }
        for index in range(3)
    ] (duplicate-code)

-----------------------------------
Your code has been rated at 9.68/10

************* Module conftest
example_code/cloudfront/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/cloudfront/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/cloudfront/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/cloudfront/test/conftest.py:9:0: W0611: Unused import random (unused-import)

-----------------------------------
Your code has been rated at 8.86/10

************* Module conftest
example_code/cloudwatch/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/cloudwatch/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.86/10

************* Module push-in-parts
example_code/codecommit/push-in-parts.py:1:0: C0103: Module name "push-in-parts" doesn't conform to snake_case naming style (invalid-name)
example_code/codecommit/push-in-parts.py:23:0: W4901: Deprecated module 'optparse' (deprecated-module)
example_code/codecommit/push-in-parts.py:33:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:29:30: W0613: Unused argument 'cur_count' (unused-argument)
example_code/codecommit/push-in-parts.py:29:57: W0613: Unused argument 'message' (unused-argument)
example_code/codecommit/push-in-parts.py:28:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/codecommit/push-in-parts.py:36:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
example_code/codecommit/push-in-parts.py:87:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:188:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:194:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:236:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:238:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:240:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:245:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/push-in-parts.py:199:4: R0912: Too many branches (15/12) (too-many-branches)
example_code/codecommit/push-in-parts.py:44:8: W0201: Attribute 'next_tag_number' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:45:8: W0201: Attribute 'migration_tags' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:46:8: W0201: Attribute 'walked_commits' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:47:8: W0201: Attribute 'local_repo' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:48:8: W0201: Attribute 'remote_name' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:49:8: W0201: Attribute 'max_commits_per_push' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:50:8: W0201: Attribute 'max_commits_tolerance' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:55:12: W0201: Attribute 'remote_repo' defined outside __init__ (attribute-defined-outside-init)
example_code/codecommit/push-in-parts.py:254:8: W0201: Attribute 'remote_migration_tags' defined outside __init__ (attribute-defined-outside-init)
************* Module MyCodeCommitFunction
example_code/codecommit/MyCodeCommitFunction.py:1:0: C0103: Module name "MyCodeCommitFunction" doesn't conform to snake_case naming style (invalid-name)
example_code/codecommit/MyCodeCommitFunction.py:50:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codecommit/MyCodeCommitFunction.py:33:26: W0613: Unused argument 'context' (unused-argument)
example_code/codecommit/MyCodeCommitFunction.py:26:0: W0611: Unused import json (unused-import)

-----------------------------------
Your code has been rated at 8.26/10

************* Module MyCodePipelineFunction
example_code/codepipeline/MyCodePipelineFunction.py:1:0: C0103: Module name "MyCodePipelineFunction" doesn't conform to snake_case naming style (invalid-name)
example_code/codepipeline/MyCodePipelineFunction.py:60:4: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/codepipeline/MyCodePipelineFunction.py:60:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codepipeline/MyCodePipelineFunction.py:87:52: W0622: Redefining built-in 'zip' (redefined-builtin)
example_code/codepipeline/MyCodePipelineFunction.py:81:15: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
example_code/codepipeline/MyCodePipelineFunction.py:111:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
example_code/codepipeline/MyCodePipelineFunction.py:114:12: W0707: Consider explicitly re-raising using 'raise Exception('Error updating CloudFormation stack "{0}"'.format(stack), e) from e' (raise-missing-from)
example_code/codepipeline/MyCodePipelineFunction.py:114:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/codepipeline/MyCodePipelineFunction.py:115:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/codepipeline/MyCodePipelineFunction.py:137:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
example_code/codepipeline/MyCodePipelineFunction.py:329:8: W0707: Consider explicitly re-raising using 'raise Exception('UserParameters could not be decoded as JSON') from e' (raise-missing-from)
example_code/codepipeline/MyCodePipelineFunction.py:329:8: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/codepipeline/MyCodePipelineFunction.py:334:8: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/codepipeline/MyCodePipelineFunction.py:339:8: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/codepipeline/MyCodePipelineFunction.py:344:8: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/codepipeline/MyCodePipelineFunction.py:325:4: W0612: Unused variable 'e' (unused-variable)
example_code/codepipeline/MyCodePipelineFunction.py:419:11: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/codepipeline/MyCodePipelineFunction.py:374:26: W0613: Unused argument 'context' (unused-argument)
example_code/codepipeline/MyCodePipelineFunction.py:31:0: W0611: Unused import urllib (unused-import)

-----------------------------------
Your code has been rated at 8.40/10

************* Module conftest
example_code/cognito/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/cognito/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/cognito/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/cognito/test/conftest.py:9:0: W0611: Unused import random (unused-import)
************* Module test_cognito_idp_actions
example_code/cognito/test/test_cognito_idp_actions.py:152:0: R0914: Too many local variables (18/15) (too-many-locals)
example_code/cognito/test/test_cognito_idp_actions.py:220:0: R0914: Too many local variables (16/15) (too-many-locals)
example_code/cognito/test/test_cognito_idp_actions.py:258:0: R0914: Too many local variables (19/15) (too-many-locals)
example_code/cognito/test/test_cognito_idp_actions.py:313:0: R0914: Too many local variables (19/15) (too-many-locals)
************* Module test_scenario_signup_user_with_mfa
example_code/cognito/test/test_scenario_signup_user_with_mfa.py:36:0: R0914: Too many local variables (31/15) (too-many-locals)
example_code/cognito/test/test_scenario_signup_user_with_mfa.py:36:0: R0915: Too many statements (55/50) (too-many-statements)
example_code/cognito/test/test_scenario_signup_user_with_mfa.py:1:0: R0801: Similar lines in 2 files
==test_cognito_idp_actions:[342:368]
==test_scenario_signup_user_with_mfa:[160:187]
        runner.add(
            cognito_idp_stubber.stub_initiate_auth,
            client_id,
            "USER_PASSWORD_AUTH",
            user_name,
            password,
            device_key,
            "DEVICE_SRP_AUTH",
        )
        runner.add(
            cognito_idp_stubber.stub_respond_to_auth_challenge,
            client_id,
            "DEVICE_SRP_AUTH",
            aws_srp.AWSSRP.get_auth_params("s"),
            "DEVICE_PASSWORD_VERIFIER",
            {},
        )
        runner.add(
            cognito_idp_stubber.stub_respond_to_auth_challenge,
            client_id,
            "DEVICE_PASSWORD_VERIFIER",
            aws_srp.AWSSRP.process_challenge("s", True, True),
            "",
            access_token=access_token,
        )

    if error_code is None: (duplicate-code)
example_code/cognito/test/test_scenario_signup_user_with_mfa.py:1:0: R0801: Similar lines in 2 files
==test_cognito_idp_actions:[326:341]
==test_scenario_signup_user_with_mfa:[61:76]
    aws_srp.AWSSRP = MagicMock
    aws_srp.AWSSRP.get_auth_params = lambda s: {
        "USERNAME": user_name,
        "SRP_A": "test-srp-a",
        "DEVICE_KEY": device_key,
    }
    tstamp = str(datetime.utcnow())
    aws_srp.AWSSRP.process_challenge = lambda s, x, r: {
        "TIMESTAMP": tstamp,
        "USERNAME": user_name,
        "PASSWORD_CLAIM_SECRET_BLOCK": "test-secret-block",
        "PASSWORD_CLAIM_SIGNATURE": "test-signature",
        "DEVICE_KEY": device_key,
    }
 (duplicate-code)
example_code/cognito/test/test_scenario_signup_user_with_mfa.py:1:0: R0801: Similar lines in 2 files
==test_cognito_idp_actions:[168:175]
==test_scenario_signup_user_with_mfa:[114:121]
        runner.add(
            cognito_idp_stubber.stub_admin_initiate_auth,
            user_pool_id,
            client_id,
            "ADMIN_USER_PASSWORD_AUTH",
            user_name,
            password, (duplicate-code)
example_code/cognito/test/test_scenario_signup_user_with_mfa.py:1:0: R0801: Similar lines in 2 files
==test_cognito_idp_actions:[270:275]
==test_scenario_signup_user_with_mfa:[56:61]
    aws_srp = MagicMock()
    aws_srp.hash_sha256 = lambda x: device_and_pw_hash
    pad_hex_results = [salt, verifier]
    aws_srp.pad_hex = lambda x: pad_hex_results.pop(0)
    aws_srp.hex_to_long = lambda x: 12345467890 (duplicate-code)

-----------------------------------
Your code has been rated at 9.41/10

************* Module conftest
example_code/comprehend/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/comprehend/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_comprehend_classifier_demo
example_code/comprehend/test/test_comprehend_classifier_demo.py:44:15: R1729: Use a generator instead 'all(',' not in issue['title'] for issue in got_issues)' (use-a-generator)
example_code/comprehend/test/test_comprehend_classifier_demo.py:45:15: R1729: Use a generator instead 'all('\r' not in issue['body'] for issue in got_issues)' (use-a-generator)
example_code/comprehend/test/test_comprehend_classifier_demo.py:46:15: R1729: Use a generator instead 'all('\n' not in issue['body'] for issue in got_issues)' (use-a-generator)
example_code/comprehend/test/test_comprehend_classifier_demo.py:48:19: R1729: Use a generator instead 'all(issue['labels'] - labels == set() for issue in got_issues)' (use-a-generator)
example_code/comprehend/test/test_comprehend_classifier_demo.py:58:27: W0613: Unused argument 'make_stubber' (unused-argument)
************* Module test_comprehend_demo_resources
example_code/comprehend/test/test_comprehend_demo_resources.py:24:0: R0914: Too many local variables (17/15) (too-many-locals)
example_code/comprehend/test/test_comprehend_demo_resources.py:98:26: W0613: Unused argument 'name' (unused-argument)
example_code/comprehend/test/test_comprehend_demo_resources.py:115:31: W0613: Unused argument 'monkeypatch' (unused-argument)
************* Module test_comprehend_topic_modeler
example_code/comprehend/test/test_comprehend_topic_modeler.py:1:0: R0801: Similar lines in 2 files
==test_comprehend_classifier:[152:158]
==test_comprehend_topic_modeler:[56:62]
                job_name,
                input_bucket,
                input_key,
                input_format,
                output_bucket,
                output_key, (duplicate-code)
example_code/comprehend/test/test_comprehend_topic_modeler.py:1:0: R0801: Similar lines in 2 files
==test_comprehend_classifier:[140:146]
==test_comprehend_topic_modeler:[44:50]
            job_name,
            input_bucket,
            input_key,
            input_format,
            output_bucket,
            output_key, (duplicate-code)
example_code/comprehend/test/test_comprehend_topic_modeler.py:1:0: R0801: Similar lines in 2 files
==test_comprehend_classifier:[127:133]
==test_comprehend_topic_modeler:[30:36]
        job_name,
        input_bucket,
        input_key,
        input_format.value,
        output_bucket,
        output_key, (duplicate-code)

-----------------------------------
Your code has been rated at 9.64/10

************* Module conftest
example_code/config/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/config/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.53/10

************* Module deeplens_kinesis_integration
example_code/deeplens/deeplens_kinesis_integration.py:19:0: C0103: Constant name "aws_access_key" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/deeplens/deeplens_kinesis_integration.py:20:0: C0103: Constant name "aws_secrete_key" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/deeplens/deeplens_kinesis_integration.py:21:0: C0103: Constant name "region" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/deeplens/deeplens_kinesis_integration.py:22:0: C0103: Constant name "stream_name" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/deeplens/deeplens_kinesis_integration.py:23:0: C0103: Constant name "retention" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/deeplens/deeplens_kinesis_integration.py:24:0: C0103: Constant name "wait_time_sec" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module deeplens_inference_lambda
example_code/deeplens/deeplens_inference_lambda.py:40:19: W0613: Unused argument 'event' (unused-argument)
example_code/deeplens/deeplens_inference_lambda.py:40:26: W0613: Unused argument 'context' (unused-argument)
example_code/deeplens/deeplens_inference_lambda.py:62:8: E1003: Bad first argument 'LocalDisplay' given to super() (bad-super-call)
example_code/deeplens/deeplens_inference_lambda.py:62:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
example_code/deeplens/deeplens_inference_lambda.py:64:8: C0103: Variable name "RESOLUTION" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_inference_lambda.py:66:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_inference_lambda.py:85:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/deeplens/deeplens_inference_lambda.py:86:22: W4902: Using deprecated method isSet() (deprecated-method)
example_code/deeplens/deeplens_inference_lambda.py:103:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_inference_lambda.py:106:4: W0221: Number of parameters was 2 in 'Thread.join' and is now 1 in overriding 'LocalDisplay.join' method (arguments-differ)
example_code/deeplens/deeplens_inference_lambda.py:114:0: R0914: Too many local variables (18/15) (too-many-locals)
example_code/deeplens/deeplens_inference_lambda.py:153:11: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/deeplens/deeplens_inference_lambda.py:125:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/deeplens/deeplens_inference_lambda.py:155:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/deeplens/deeplens_inference_lambda.py:163:12: W0707: Consider explicitly re-raising using 'raise Exception('Failed to get frame from the stream') from ex' (raise-missing-from)
example_code/deeplens/deeplens_inference_lambda.py:163:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_inference_lambda.py:165:42: E0601: Using variable 'input_height' before assignment (used-before-assignment)
example_code/deeplens/deeplens_inference_lambda.py:165:56: E0601: Using variable 'input_width' before assignment (used-before-assignment)
example_code/deeplens/deeplens_inference_lambda.py:170:35: E0601: Using variable 'model' before assignment (used-before-assignment)
example_code/deeplens/deeplens_inference_lambda.py:171:12: E0601: Using variable 'model_type' before assignment (used-before-assignment)
example_code/deeplens/deeplens_inference_lambda.py:174:55: E0601: Using variable 'num_top_k' before assignment (used-before-assignment)
example_code/deeplens/deeplens_inference_lambda.py:181:12: E0601: Using variable 'output_map' before assignment (used-before-assignment)
example_code/deeplens/deeplens_inference_lambda.py:206:0: W0105: String statement has no effect (pointless-string-statement)
example_code/deeplens/deeplens_inference_lambda.py:209:0: E0102: function already defined line 40 (function-redefined)
example_code/deeplens/deeplens_inference_lambda.py:209:19: W0613: Unused argument 'event' (unused-argument)
example_code/deeplens/deeplens_inference_lambda.py:209:26: W0613: Unused argument 'context' (unused-argument)
example_code/deeplens/deeplens_inference_lambda.py:214:0: E0102: class already defined line 49 (function-redefined)
example_code/deeplens/deeplens_inference_lambda.py:227:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
example_code/deeplens/deeplens_inference_lambda.py:229:8: C0103: Variable name "RESOLUTION" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_inference_lambda.py:231:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_inference_lambda.py:250:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/deeplens/deeplens_inference_lambda.py:251:22: W4902: Using deprecated method isSet() (deprecated-method)
example_code/deeplens/deeplens_inference_lambda.py:268:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_inference_lambda.py:271:4: W0221: Number of parameters was 2 in 'Thread.join' and is now 1 in overriding 'LocalDisplay.join' method (arguments-differ)
example_code/deeplens/deeplens_inference_lambda.py:275:0: E0102: function already defined line 114 (function-redefined)
example_code/deeplens/deeplens_inference_lambda.py:275:0: R0914: Too many local variables (18/15) (too-many-locals)
example_code/deeplens/deeplens_inference_lambda.py:339:11: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/deeplens/deeplens_inference_lambda.py:285:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/deeplens/deeplens_inference_lambda.py:307:16: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_inference_lambda.py:341:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module deeplens_kvi_api
example_code/deeplens/deeplens_kvi_api.py:26:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/deeplens/deeplens_kvi_api.py:46:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module deeplens_view_output
example_code/deeplens/deeplens_view_output.py:41:11: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/deeplens/deeplens_view_output.py:44:0: C0103: Constant name "Write_To_FIFO" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:47:0: C0103: Class name "FIFO_Thread" doesn't conform to PascalCase naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:56:12: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/deeplens/deeplens_view_output.py:56:12: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
example_code/deeplens/deeplens_view_output.py:61:12: W0612: Unused variable 'e' (unused-variable)
example_code/deeplens/deeplens_view_output.py:65:0: R0914: Too many local variables (26/15) (too-many-locals)
example_code/deeplens/deeplens_view_output.py:104:13: W0621: Redefining name 'frame' from outer scope (line 42) (redefined-outer-name)
example_code/deeplens/deeplens_view_output.py:159:11: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/deeplens/deeplens_view_output.py:67:8: C0103: Variable name "modelPath" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:68:8: C0103: Variable name "modelType" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:72:8: C0103: Variable name "outMap" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:105:11: C0121: Comparison 'ret == False' should be 'ret is False' if checking for the singleton value False, or 'not ret' if testing for falsiness (singleton-comparison)
example_code/deeplens/deeplens_view_output.py:106:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_view_output.py:111:8: C0103: Variable name "doInfer" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:117:15: C0121: Comparison 'ret == False' should be 'ret is False' if checking for the singleton value False, or 'not ret' if testing for falsiness (singleton-comparison)
example_code/deeplens/deeplens_view_output.py:118:16: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/deeplens/deeplens_view_output.py:121:12: C0103: Variable name "frameResize" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:124:12: C0103: Variable name "inferOutput" doesn't conform to snake_case naming style (invalid-name)
example_code/deeplens/deeplens_view_output.py:140:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/deeplens/deeplens_view_output.py:141:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/deeplens/deeplens_view_output.py:156:12: W0603: Using the global statement (global-statement)
example_code/deeplens/deeplens_view_output.py:173:21: W0613: Unused argument 'event' (unused-argument)
example_code/deeplens/deeplens_view_output.py:173:28: W0613: Unused argument 'context' (unused-argument)
example_code/deeplens/deeplens_view_output.py:28:0: W0611: Unused import time (unused-import)

-----------------------------------
Your code has been rated at 5.37/10

************* Module test_suite
example_code/devicefarm/browser_testing/test_suite.py:36:4: W0702: No exception type(s) specified (bare-except)
example_code/devicefarm/browser_testing/test_suite.py:110:30: W0613: Unused argument 'method' (unused-argument)
example_code/devicefarm/browser_testing/test_suite.py:75:8: W0201: Attribute 'screenshot_path' defined outside __init__ (attribute-defined-outside-init)
example_code/devicefarm/browser_testing/test_suite.py:87:8: W0201: Attribute 'driver' defined outside __init__ (attribute-defined-outside-init)
example_code/devicefarm/browser_testing/test_suite.py:100:8: W0201: Attribute 'session_arn' defined outside __init__ (attribute-defined-outside-init)
************* Module run_tests
example_code/devicefarm/device_testing/run_tests.py:50:19: W0621: Redefining name 'filename' from outer scope (line 157) (redefined-outer-name)
example_code/devicefarm/device_testing/run_tests.py:66:18: W3101: Missing timeout argument for method 'requests.put' can cause your program to hang indefinitely (missing-timeout)
example_code/devicefarm/device_testing/run_tests.py:71:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/devicefarm/device_testing/run_tests.py:79:12: W0719: Raising too general exception: Exception (broad-exception-raised)
example_code/devicefarm/device_testing/run_tests.py:112:0: C0103: Constant name "state" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/devicefarm/device_testing/run_tests.py:125:0: W0702: No exception type(s) specified (bare-except)
example_code/devicefarm/device_testing/run_tests.py:117:8: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
example_code/devicefarm/device_testing/run_tests.py:117:11: R1714: Consider merging these comparisons with 'in' by using 'state in ('COMPLETED', 'ERRORED')'. Use a set instead if elements are hashable. (consider-using-in)
example_code/devicefarm/device_testing/run_tests.py:127:4: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
example_code/devicefarm/device_testing/run_tests.py:167:29: W3101: Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely (missing-timeout)

-----------------------------------
Your code has been rated at 8.88/10

************* Module scenario_getting_started_movies
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:92:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:129:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:214:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:241:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:270:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:378:24: W3101: Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely (missing-timeout)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:384:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:385:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:381:20: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:402:0: R0914: Too many local variables (17/15) (too-many-locals)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:476:12: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:498:16: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:535:29: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:402:0: R0915: Too many statements (64/50) (too-many-statements)
example_code/dynamodb/GettingStarted/scenario_getting_started_movies.py:553:11: W0718: Catching too general exception Exception (broad-exception-caught)
************* Module update_and_query
example_code/dynamodb/GettingStarted/update_and_query.py:43:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/update_and_query.py:76:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/GettingStarted/update_and_query.py:140:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
example_code/dynamodb/GettingStarted/update_and_query.py:257:8: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/GettingStarted/update_and_query.py:181:0: R0915: Too many statements (56/50) (too-many-statements)
example_code/dynamodb/GettingStarted/update_and_query.py:283:11: W0718: Catching too general exception Exception (broad-exception-caught)
************* Module 01-create-table
example_code/dynamodb/TryDax/01-create-table.py:1:0: C0103: Module name "01-create-table" doesn't conform to snake_case naming style (invalid-name)
example_code/dynamodb/TryDax/01-create-table.py:47:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
************* Module 02-write-data
example_code/dynamodb/TryDax/02-write-data.py:1:0: C0103: Module name "02-write-data" doesn't conform to snake_case naming style (invalid-name)
example_code/dynamodb/TryDax/02-write-data.py:44:4: C0103: Constant name "write_key_count" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/dynamodb/TryDax/02-write-data.py:45:4: C0103: Constant name "write_item_size" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module 03-getitem-test
example_code/dynamodb/TryDax/03-getitem-test.py:1:0: C0103: Module name "03-getitem-test" doesn't conform to snake_case naming style (invalid-name)
example_code/dynamodb/TryDax/03-getitem-test.py:64:4: C0103: Constant name "test_key_count" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/dynamodb/TryDax/03-getitem-test.py:65:4: C0103: Constant name "test_iterations" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module 04-query-test
example_code/dynamodb/TryDax/04-query-test.py:1:0: C0103: Module name "04-query-test" doesn't conform to snake_case naming style (invalid-name)
example_code/dynamodb/TryDax/04-query-test.py:68:4: C0103: Constant name "test_partition_key" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/dynamodb/TryDax/04-query-test.py:70:4: C0103: Constant name "test_iterations" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module 05-scan-test
example_code/dynamodb/TryDax/05-scan-test.py:1:0: C0103: Module name "05-scan-test" doesn't conform to snake_case naming style (invalid-name)
example_code/dynamodb/TryDax/05-scan-test.py:59:4: C0103: Constant name "test_iterations" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module 06-delete-table
example_code/dynamodb/TryDax/06-delete-table.py:1:0: C0103: Module name "06-delete-table" doesn't conform to snake_case naming style (invalid-name)
************* Module dynamo_batching
example_code/dynamodb/batching/dynamo_batching.py:44:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/batching/dynamo_batching.py:95:32: R1728: Consider using a generator instead 'sum(len(batch_key['Keys']) for batch_key in batch_keys.values())' (consider-using-generator)
example_code/dynamodb/batching/dynamo_batching.py:161:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/batching/dynamo_batching.py:268:0: R0914: Too many local variables (19/15) (too-many-locals)
example_code/dynamodb/batching/dynamo_batching.py:281:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/dynamodb/batching/dynamo_batching.py:324:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/batching/dynamo_batching.py:347:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/batching/dynamo_batching.py:268:0: R0915: Too many statements (56/50) (too-many-statements)
************* Module scenario_partiql_batch
example_code/dynamodb/partiql/scenario_partiql_batch.py:59:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/partiql/scenario_partiql_batch.py:31:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/dynamodb/partiql/scenario_partiql_batch.py:89:17: W0621: Redefining name 'scaffold' from outer scope (line 187) (redefined-outer-name)
example_code/dynamodb/partiql/scenario_partiql_batch.py:102:21: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_batch.py:110:21: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_batch.py:118:21: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_batch.py:136:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_batch.py:148:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_batch.py:160:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_batch.py:167:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_batch.py:190:11: W0718: Catching too general exception Exception (broad-exception-caught)
************* Module scenario_partiql_single
example_code/dynamodb/partiql/scenario_partiql_single.py:57:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/dynamodb/partiql/scenario_partiql_single.py:30:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/dynamodb/partiql/scenario_partiql_single.py:84:17: W0621: Redefining name 'scaffold' from outer scope (line 153) (redefined-outer-name)
example_code/dynamodb/partiql/scenario_partiql_single.py:126:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/dynamodb/partiql/scenario_partiql_single.py:156:11: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scaffold:[37:55]
==scenario_getting_started_movies:[91:109]
        try:
            self.table = self.dyn_resource.create_table(
                TableName=table_name,
                KeySchema=[
                    {"AttributeName": "year", "KeyType": "HASH"},  # Partition key
                    {"AttributeName": "title", "KeyType": "RANGE"},  # Sort key
                ],
                AttributeDefinitions=[
                    {"AttributeName": "year", "AttributeType": "N"},
                    {"AttributeName": "title", "AttributeType": "S"},
                ],
                ProvisionedThroughput={
                    "ReadCapacityUnits": 10,
                    "WriteCapacityUnits": 10,
                },
            )
            self.table.wait_until_exists()
        except ClientError as err: (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_getting_started_movies:[245:270]
==update_and_query:[47:76]
                ReturnValues="UPDATED_NEW",
            )
        except ClientError as err:
            logger.error(
                "Couldn't update movie %s in table %s. Here's why: %s: %s",
                title,
                self.table.name,
                err.response["Error"]["Code"],
                err.response["Error"]["Message"],
            )
            raise
        else:
            return response["Attributes"]

    # snippet-end:[python.example_code.dynamodb.UpdateItem.UpdateExpression.Arithmetic]

    # snippet-start:[python.example_code.dynamodb.UpdateItem.ConditionalExpression]
    def remove_actors(self, title, year, actor_threshold):
        """
        Removes an actor from a movie, but only when the number of actors is greater
        than a specified threshold. If the movie does not list more than the threshold,
        no actors are removed.

        :param title: The title of the movie to update.
        :param year: The release year of the movie to update.
        :param actor_threshold: The threshold of actors to check.
        :return: The movie data after the update.
        """
        try: (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==03-getitem-test:[46:63]
==04-query-test:[50:67]
                print(".", end="")
                sys.stdout.flush()
    print()
    end = time.perf_counter()
    return start, end


if __name__ == "__main__":
    # pylint: disable=not-context-manager
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "endpoint_url",
        nargs="?",
        help="When specified, the DAX cluster endpoint. Otherwise, DAX is not used.",
    )
    args = parser.parse_args()
 (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_partiql_batch:[172:187]
==scenario_partiql_single:[138:153]
    print("Success!")
    print("-" * 88)

    print(f"Deleting table '{table_name}'...")
    scaffold.delete_table()
    print("-" * 88)

    print("\nThanks for watching!")
    print("-" * 88)


if __name__ == "__main__":
    try:
        dyn_res = boto3.resource("dynamodb")
        scaffold = Scaffold(dyn_res) (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_partiql_batch:[74:92]
==scenario_partiql_single:[70:87]
                    err.response["Error"]["Code"],
                    err.response["Error"]["Message"],
                )
            raise
        else:
            return output


# snippet-end:[python.example_code.dynamodb.ExecuteStatement]
# snippet-end:[python.example_code.dynamodb.helper.PartiQLWrapper.class_full]


# snippet-start:[python.example_code.dynamodb.Scenario_PartiQLSingle]
def run_scenario(scaffold, wrapper, table_name):
    logging.basicConfig(level=logging.INFO, format="%(levelname)s: %(message)s")

    print("-" * 88) (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scaffold:[78:85]
==scenario_getting_started_movies:[352:375]
        except ClientError as err:
            logger.error(
                "Couldn't delete table. Here's why: %s: %s",
                err.response["Error"]["Code"],
                err.response["Error"]["Message"],
            )
            raise (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scaffold:[58:70]
==scenario_getting_started_movies:[109:116]
            logger.error(
                "Couldn't create table %s. Here's why: %s: %s",
                table_name,
                err.response["Error"]["Code"],
                err.response["Error"]["Message"],
            )
            raise (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_getting_started_movies:[252:270]
==update_and_query:[94:115]
                    err.response["Error"]["Code"],
                    err.response["Error"]["Message"],
                )
            raise
        else:
            return response["Attributes"]

    # snippet-end:[python.example_code.dynamodb.UpdateItem.ConditionalExpression]

    # snippet-start:[python.example_code.dynamodb.DeleteItem.ConditionExpression]
    def delete_underrated_movie(self, title, year, rating):
        """
        Deletes a movie only if it is rated below a specified value. By using a
        condition expression in a delete operation, you can specify that an item is
        deleted only when it meets certain criteria.

        :param title: The title of the movie to delete.
        :param year: The release year of the movie to delete.
        :param rating: The rating threshold to check before deleting the movie.
        """
        try: (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_getting_started_movies:[218:225]
==update_and_query:[52:59]
                title,
                self.table.name,
                err.response["Error"]["Code"],
                err.response["Error"]["Message"],
            )
            raise
        else: (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_getting_started_movies:[334:350]
==update_and_query:[128:150]
                logger.error(
                    "Couldn't delete movie %s. Here's why: %s: %s",
                    title,
                    err.response["Error"]["Code"],
                    err.response["Error"]["Message"],
                )
            raise

    # snippet-end:[python.example_code.dynamodb.DeleteItem.ConditionExpression]

    # snippet-start:[python.example_code.dynamodb.Query.ProjectionExpression]
    def query_and_project_movies(self, year, title_bounds):
        """
        Query for movies that were released in a specified year and that have titles
        that start within a range of letters. A projection expression is used
        to return a subset of data for each movie.

        :param year: The release year to query.
        :param title_bounds: The range of starting letters to query.
        :return: The list of movies.
        """
        try: (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_getting_started_movies:[275:293]
==update_and_query:[170:181]
                    err.response["Error"]["Code"],
                    err.response["Error"]["Message"],
                )
                raise
        else:
            return response["Items"]

    # snippet-end:[python.example_code.dynamodb.Query.ProjectionExpression]


def usage_demo(table): (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==scenario_getting_started_movies:[195:213]
==update_and_query:[52:58]
                title,
                self.table.name,
                err.response["Error"]["Code"],
                err.response["Error"]["Message"],
            )
            raise

    # snippet-end:[python.example_code.dynamodb.PutItem]

    # snippet-start:[python.example_code.dynamodb.GetItem]
    def get_movie(self, title, year):
        """
        Gets movie data from the table for a specific movie.

        :param title: The title of the movie.
        :param year: The release year of the movie.
        :return: The data about the requested movie.
        """ (duplicate-code)
example_code/dynamodb/partiql/scenario_partiql_single.py:1:0: R0801: Similar lines in 2 files
==03-getitem-test:[35:41]
==05-scan-test:[34:40]
    if dyn_resource is None:
        dyn_resource = boto3.resource("dynamodb")

    table = dyn_resource.Table("TryDaxTable")
    start = time.perf_counter()
    for _ in range(iterations): (duplicate-code)

-----------------------------------
Your code has been rated at 9.10/10

************* Module conftest
example_code/ec2/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/ec2/test/conftest.py:24:0: R0903: Too few public methods (0/2) (too-few-public-methods)
example_code/ec2/test/conftest.py:39:0: R0903: Too few public methods (0/2) (too-few-public-methods)
example_code/ec2/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:10:0: C0411: standard import "from unittest.mock import MagicMock" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:12:0: C0411: third party import "import boto3" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:13:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:14:0: C0411: third party import "import scenario_get_started_instances" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:15:0: C0411: third party import "from elastic_ip import ElasticIpWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:16:0: C0411: third party import "from instance import InstanceWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:17:0: C0411: third party import "from key_pair import KeyPairWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ec2/test/conftest.py:18:0: C0411: third party import "from security_group import SecurityGroupWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_associate_elastic_ip
example_code/ec2/test/test_associate_elastic_ip.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/ec2/test/test_associate_elastic_ip.py:37:30: W0621: Redefining name 'mock_mgr' from outer scope (line 33) (redefined-outer-name)
example_code/ec2/test/test_associate_elastic_ip.py:54:36: W0621: Redefining name 'mock_mgr' from outer scope (line 33) (redefined-outer-name)
************* Module test_cleanup
example_code/ec2/test/test_cleanup.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/ec2/test/test_cleanup.py:54:17: W0621: Redefining name 'mock_mgr' from outer scope (line 50) (redefined-outer-name)
example_code/ec2/test/test_cleanup.py:78:23: W0621: Redefining name 'mock_mgr' from outer scope (line 50) (redefined-outer-name)
************* Module test_create_and_list_key_pairs
example_code/ec2/test/test_create_and_list_key_pairs.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/ec2/test/test_create_and_list_key_pairs.py:37:35: W0621: Redefining name 'mock_mgr' from outer scope (line 33) (redefined-outer-name)
example_code/ec2/test/test_create_and_list_key_pairs.py:58:41: W0621: Redefining name 'mock_mgr' from outer scope (line 33) (redefined-outer-name)
example_code/ec2/test/test_create_and_list_key_pairs.py:61:48: W0612: Unused variable 'mock_file' (unused-variable)
************* Module test_create_instance
example_code/ec2/test/test_create_instance.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/ec2/test/test_create_instance.py:64:25: W0621: Redefining name 'mock_mgr' from outer scope (line 60) (redefined-outer-name)
example_code/ec2/test/test_create_instance.py:84:31: W0621: Redefining name 'mock_mgr' from outer scope (line 60) (redefined-outer-name)
************* Module test_create_security_group
example_code/ec2/test/test_create_security_group.py:12:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/ec2/test/test_create_security_group.py:48:31: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
example_code/ec2/test/test_create_security_group.py:66:37: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
************* Module test_stop_and_start_instance
example_code/ec2/test/test_stop_and_start_instance.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/ec2/test/test_stop_and_start_instance.py:57:33: W0621: Redefining name 'mock_mgr' from outer scope (line 53) (redefined-outer-name)
example_code/ec2/test/test_stop_and_start_instance.py:75:39: W0621: Redefining name 'mock_mgr' from outer scope (line 53) (redefined-outer-name)

-----------------------------------
Your code has been rated at 8.79/10


------------------------------------
Your code has been rated at 10.00/10

************* Module create_hls_job
example_code/elastictranscoder/create_hls_job.py:134:8: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
************* Module JobStatusNotificationSample
example_code/elastictranscoder/JobStatusNotificationSample.py:1:0: C0103: Module name "JobStatusNotificationSample" doesn't conform to snake_case naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:32:0: C0103: Constant name "pipeline_id" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:33:0: C0103: Constant name "input_file" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:37:0: C0103: Constant name "output_file" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:38:0: C0103: Constant name "sqs_queue_name" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:44:0: C0103: Constant name "preset_id" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:46:0: C0103: Constant name "output_file_prefix" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:49:0: C0103: Constant name "monitor_sqs_messages" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:55:31: W0621: Redefining name 'sqs_queue_name' from outer scope (line 38) (redefined-outer-name)
example_code/elastictranscoder/JobStatusNotificationSample.py:111:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
example_code/elastictranscoder/JobStatusNotificationSample.py:129:8: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
************* Module SqsQueueNotificationWorker
example_code/elastictranscoder/SqsQueueNotificationWorker.py:1:0: C0103: Module name "SqsQueueNotificationWorker" doesn't conform to snake_case naming style (invalid-name)
example_code/elastictranscoder/SqsQueueNotificationWorker.py:1:0: R0801: Similar lines in 2 files
==JobStatusNotificationSample:[109:114]
==create_hls_job:[41:46]
    etc_client = boto3.client("elastictranscoder")
    try:
        response = etc_client.create_job(
            PipelineId=pipeline_id,
            Input={"Key": input_file}, (duplicate-code)

-----------------------------------
Your code has been rated at 9.10/10

************* Module conftest
example_code/emr/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/emr/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_emr_basics
example_code/emr/test/test_emr_basics.py:17:0: R0914: Too many local variables (19/15) (too-many-locals)
example_code/emr/test/test_emr_basics.py:188:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/emr/test/test_emr_basics.py:189:16: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
************* Module test_emr_usage_demo
example_code/emr/test/test_emr_usage_demo.py:104:0: R0913: Too many arguments (7/5) (too-many-arguments)
example_code/emr/test/test_emr_usage_demo.py:104:0: R0914: Too many local variables (16/15) (too-many-locals)
example_code/emr/test/test_emr_usage_demo.py:216:18: W0613: Unused argument 'make_unique_name' (unused-argument)
example_code/emr/test/test_emr_usage_demo.py:302:41: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/emr/test/test_emr_usage_demo.py:303:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/emr/test/test_emr_usage_demo.py:305:22: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
************* Module test_emrfs_step
example_code/emr/test/test_emrfs_step.py:15:36: W0613: Unused argument 'make_unique_name' (unused-argument)
************* Module test_install_libraries
example_code/emr/test/test_install_libraries.py:27:0: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/emr/test/test_install_libraries.py:27:0: R0914: Too many local variables (18/15) (too-many-locals)

-----------------------------------
Your code has been rated at 9.47/10

************* Module conftest
example_code/glacier/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/glacier/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.89/10

************* Module conftest
example_code/glue/test/conftest.py:9:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/glue/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_scaffold
example_code/glue/test/test_scaffold.py:74:44: W0613: Unused argument 'monkeypatch' (unused-argument)
************* Module test_scenario_getting_started_crawlers_and_jobs
example_code/glue/test/test_scenario_getting_started_crawlers_and_jobs.py:55:0: R0914: Too many local variables (28/15) (too-many-locals)
example_code/glue/test/test_scenario_getting_started_crawlers_and_jobs.py:55:0: R0915: Too many statements (52/50) (too-many-statements)

-----------------------------------
Your code has been rated at 9.67/10

************* Module connector_cloudwatch_metrics_usage
example_code/greengrass/snippets/connector_cloudwatch_metrics_usage.py:19:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_cloudwatch_metrics_usage.py:48:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_cloudwatch_metrics_usage.py:48:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_image_classification_usage
example_code/greengrass/snippets/connector_image_classification_usage.py:62:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_image_classification_usage.py:62:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_kinesis_firehose_usage
example_code/greengrass/snippets/connector_kinesis_firehose_usage.py:17:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_kinesis_firehose_usage.py:37:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_kinesis_firehose_usage.py:37:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_modbus_rtu_usage
example_code/greengrass/snippets/connector_modbus_rtu_usage.py:17:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_modbus_rtu_usage.py:42:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_modbus_rtu_usage.py:42:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_raspberrypi_gpio_usage
example_code/greengrass/snippets/connector_raspberrypi_gpio_usage.py:31:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_raspberrypi_gpio_usage.py:31:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_serial_stream_usage
example_code/greengrass/snippets/connector_serial_stream_usage.py:17:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_serial_stream_usage.py:34:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_serial_stream_usage.py:34:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_servicenow_metricsbase_integration_usage
example_code/greengrass/snippets/connector_servicenow_metricsbase_integration_usage.py:17:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_servicenow_metricsbase_integration_usage.py:42:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_servicenow_metricsbase_integration_usage.py:42:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_sns_usage
example_code/greengrass/snippets/connector_sns_usage.py:17:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_sns_usage.py:34:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_sns_usage.py:34:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_splunk_integration_usage
example_code/greengrass/snippets/connector_splunk_integration_usage.py:17:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_splunk_integration_usage.py:34:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_splunk_integration_usage.py:34:28: W0613: Unused argument 'context' (unused-argument)
************* Module connector_twilio_notifications_usage
example_code/greengrass/snippets/connector_twilio_notifications_usage.py:17:0: C0103: Constant name "txt_input_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/connector_twilio_notifications_usage.py:40:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/connector_twilio_notifications_usage.py:40:28: W0613: Unused argument 'context' (unused-argument)
************* Module getting_started_connectors
example_code/greengrass/snippets/getting_started_connectors.py:18:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/getting_started_connectors.py:35:28: W0613: Unused argument 'context' (unused-argument)
************* Module local_resource_access_volume
example_code/greengrass/snippets/local_resource_access_volume.py:18:0: C0103: Constant name "volume_path" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/local_resource_access_volume.py:36:11: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/greengrass/snippets/local_resource_access_volume.py:31:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/greengrass/snippets/local_resource_access_volume.py:33:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/greengrass/snippets/local_resource_access_volume.py:21:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/local_resource_access_volume.py:21:28: W0613: Unused argument 'context' (unused-argument)
************* Module secret_resource_access
example_code/greengrass/snippets/secret_resource_access.py:16:0: C0103: Constant name "secret_name" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/secret_resource_access.py:17:0: C0103: Constant name "send_topic" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/secret_resource_access.py:20:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/secret_resource_access.py:20:28: W0613: Unused argument 'context' (unused-argument)
************* Module secret_resource_access_default_value
example_code/greengrass/snippets/secret_resource_access_default_value.py:15:0: C0103: Constant name "secret_name" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/secret_resource_access_default_value.py:18:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/secret_resource_access_default_value.py:18:28: W0613: Unused argument 'context' (unused-argument)
example_code/greengrass/snippets/secret_resource_access_default_value.py:20:4: W0612: Unused variable 'secret' (unused-variable)
************* Module secret_resource_access_staging_label
example_code/greengrass/snippets/secret_resource_access_staging_label.py:15:0: C0103: Constant name "secret_name" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/secret_resource_access_staging_label.py:16:0: C0103: Constant name "secret_version" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/greengrass/snippets/secret_resource_access_staging_label.py:20:21: W0613: Unused argument 'event' (unused-argument)
example_code/greengrass/snippets/secret_resource_access_staging_label.py:20:28: W0613: Unused argument 'context' (unused-argument)
example_code/greengrass/snippets/secret_resource_access_staging_label.py:24:4: W0612: Unused variable 'secret' (unused-variable)
************* Module test_greengrass_snippets
example_code/greengrass/test/test_greengrass_snippets.py:61:12: C0415: Import outside toplevel (snippets.connector_image_classification_usage) (import-outside-toplevel)
example_code/greengrass/test/test_greengrass_snippets.py:1:0: R0801: Similar lines in 2 files
==connector_kinesis_firehose_usage:[23:38]
==connector_servicenow_metricsbase_integration_usage:[28:43]
    }


def publish_basic_message():
    message = create_request()
    print(f"Message to publish: {message}")
    iot_client.publish(topic=send_topic, payload=json.dumps(message))


publish_basic_message()


# In this example, the required AWS Lambda handler is never called.
def function_handler(event, context):
    return (duplicate-code)
example_code/greengrass/test/test_greengrass_snippets.py:1:0: R0801: Similar lines in 2 files
==connector_kinesis_firehose_usage:[27:38]
==connector_splunk_integration_usage:[24:35]
    message = create_request()
    print(f"Message to publish: {message}")
    iot_client.publish(topic=send_topic, payload=json.dumps(message))


publish_basic_message()


# In this example, the required AWS Lambda handler is never called.
def function_handler(event, context):
    return (duplicate-code)

-----------------------------------
Your code has been rated at 7.98/10

************* Module conftest
example_code/iam/test/conftest.py:9:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/iam/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_account_wrapper
example_code/iam/test/test_account_wrapper.py:144:43: W0613: Unused argument 'count' (unused-argument)
************* Module test_policy_wrapper
example_code/iam/test/test_policy_wrapper.py:56:37: W0613: Unused argument 'make_unique_name' (unused-argument)
example_code/iam/test/test_policy_wrapper.py:71:45: W0613: Unused argument 'make_unique_name' (unused-argument)
************* Module test_scenario_create_user_assume_role
example_code/iam/test/test_scenario_create_user_assume_role.py:31:0: R0914: Too many local variables (20/15) (too-many-locals)
example_code/iam/test/test_scenario_create_user_assume_role.py:74:15: W0613: Unused argument 'client' (unused-argument)
example_code/iam/test/test_scenario_create_user_assume_role.py:101:0: R0914: Too many local variables (19/15) (too-many-locals)
example_code/iam/test/test_scenario_create_user_assume_role.py:120:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
example_code/iam/test/test_scenario_create_user_assume_role.py:114:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)

-----------------------------------
Your code has been rated at 9.81/10

************* Module thing_performance
example_code/iot/thing_performance.py:37:0: C0103: Function name "configureParser" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:38:4: W0621: Redefining name 'parser' from outer scope (line 188) (redefined-outer-name)
example_code/iot/thing_performance.py:119:8: C0103: Attribute name "thingName" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:122:8: C0103: Attribute name "rootCAPath" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:123:8: C0103: Attribute name "privateKeyPath" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:124:8: C0103: Attribute name "certificatePath" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:125:8: C0103: Attribute name "requestDelay" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:111:8: C0103: Argument name "thingName" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:114:8: C0103: Argument name "rootCAPath" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:115:8: C0103: Argument name "privateKeyPath" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:116:8: C0103: Argument name "certificatePath" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:117:8: C0103: Argument name "requestDelay" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:109:4: R0913: Too many arguments (8/5) (too-many-arguments)
example_code/iot/thing_performance.py:129:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:130:8: C0103: Variable name "mqttClient" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:132:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:133:8: C0103: Variable name "deviceShadowHandler" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:137:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:140:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:141:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:142:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:147:23: E0601: Using variable 'args' before assignment (used-before-assignment)
example_code/iot/thing_performance.py:150:4: C0103: Method name "configureMQTTClient" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:151:8: C0103: Variable name "mqttClient" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:162:4: C0103: Method name "readPerformance" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:169:4: C0103: Method name "shadowUpdateCallback" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:169:44: C0103: Argument name "responseStatus" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:170:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:171:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/iot/thing_performance.py:169:35: W0613: Unused argument 'payload' (unused-argument)
example_code/iot/thing_performance.py:175:0: C0103: Function name "configureLogging" doesn't conform to snake_case naming style (invalid-name)
example_code/iot/thing_performance.py:178:4: C0103: Variable name "streamHandler" doesn't conform to snake_case naming style (invalid-name)

-----------------------------------
Your code has been rated at 4.93/10

************* Module conftest
example_code/keyspaces/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/keyspaces/test/conftest.py:20:0: R0903: Too few public methods (0/2) (too-few-public-methods)
example_code/keyspaces/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/keyspaces/test/conftest.py:11:0: C0411: third party import "import boto3" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/keyspaces/test/conftest.py:12:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/keyspaces/test/conftest.py:13:0: C0411: third party import "import scenario_get_started_keyspaces" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/keyspaces/test/conftest.py:14:0: C0411: third party import "from keyspace import KeyspaceWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_cleanup
example_code/keyspaces/test/test_cleanup.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/keyspaces/test/test_cleanup.py:51:17: W0621: Redefining name 'mock_mgr' from outer scope (line 47) (redefined-outer-name)
example_code/keyspaces/test/test_cleanup.py:68:23: W0621: Redefining name 'mock_mgr' from outer scope (line 47) (redefined-outer-name)
************* Module test_create_keyspace
example_code/keyspaces/test/test_create_keyspace.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/keyspaces/test/test_create_keyspace.py:44:25: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
example_code/keyspaces/test/test_create_keyspace.py:64:31: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
************* Module test_create_table
example_code/keyspaces/test/test_create_table.py:8:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
example_code/keyspaces/test/test_create_table.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/keyspaces/test/test_create_table.py:79:22: W0621: Redefining name 'mock_mgr' from outer scope (line 74) (redefined-outer-name)
example_code/keyspaces/test/test_create_table.py:100:28: W0621: Redefining name 'mock_mgr' from outer scope (line 74) (redefined-outer-name)
************* Module test_get_started_keyspaces_integ
example_code/keyspaces/test/test_get_started_keyspaces_integ.py:13:14: W0613: Unused argument 'monkeypatch' (unused-argument)
example_code/keyspaces/test/test_get_started_keyspaces_integ.py:4:0: W0611: Unused import os (unused-import)
example_code/keyspaces/test/test_get_started_keyspaces_integ.py:8:0: W0611: Unused QueryManager imported from query (unused-import)
************* Module test_query_table
example_code/keyspaces/test/test_query_table.py:20:29: W0613: Unused argument 'parameters' (unused-argument)
example_code/keyspaces/test/test_query_table.py:7:0: W0611: Unused import pytest (unused-import)
example_code/keyspaces/test/test_query_table.py:9:0: W0611: Unused ClientError imported from botocore.exceptions (unused-import)
************* Module test_update_and_restore_table
example_code/keyspaces/test/test_update_and_restore_table.py:11:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/keyspaces/test/test_update_and_restore_table.py:80:34: W0621: Redefining name 'mock_mgr' from outer scope (line 60) (redefined-outer-name)
example_code/keyspaces/test/test_update_and_restore_table.py:101:40: W0621: Redefining name 'mock_mgr' from outer scope (line 60) (redefined-outer-name)
example_code/keyspaces/test/test_update_and_restore_table.py:1:0: R0801: Similar lines in 2 files
==test_cleanup:[18:25]
==test_update_and_restore_table:[22:29]
        input_mocker.mock_answers(answers)
        self.stub_runner = stub_runner

    def setup_stubs(self, error, stop_on, stubber):
        ks_wrapper = self.scenario_data.scenario.ks_wrapper
        with self.stub_runner(error, stop_on) as runner:
            runner.add( (duplicate-code)

-----------------------------------
Your code has been rated at 8.88/10

************* Module analytics_application
example_code/kinesis/analyticsv2/analytics_application.py:102:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/analyticsv2/analytics_application.py:142:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/analyticsv2/analytics_application.py:183:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/analyticsv2/analytics_application.py:205:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/analyticsv2/analytics_application.py:240:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/analyticsv2/analytics_application.py:273:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/analyticsv2/analytics_application.py:307:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/analyticsv2/analytics_application.py:344:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
************* Module dg_anomaly
example_code/kinesis/streams/dg_anomaly.py:24:4: C0103: Class constant name "normal" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/kinesis/streams/dg_anomaly.py:25:4: C0103: Class constant name "high" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module dg_anomalyex
example_code/kinesis/streams/dg_anomalyex.py:25:4: C0103: Class constant name "low" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/kinesis/streams/dg_anomalyex.py:26:4: C0103: Class constant name "normal" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/kinesis/streams/dg_anomalyex.py:27:4: C0103: Class constant name "high" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module dg_hotspots
example_code/kinesis/streams/dg_hotspots.py:44:0: R0913: Too many arguments (6/5) (too-many-arguments)
************* Module kinesis_stream
example_code/kinesis/streams/kinesis_stream.py:78:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/kinesis/streams/kinesis_stream.py:116:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
************* Module conftest
example_code/kinesis/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/kinesis/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/kinesis/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/kinesis/test/conftest.py:9:0: W0611: Unused import random (unused-import)
************* Module test_analytics_application
example_code/kinesis/test/test_analytics_application.py:17:46: W0613: Unused argument 'stub_runner' (unused-argument)
example_code/kinesis/test/test_analytics_application.py:13:0: W0611: Unused WaiterError imported from botocore.exceptions (unused-import)
************* Module test_data_generators
example_code/kinesis/test/test_data_generators.py:70:0: R0913: Too many arguments (6/5) (too-many-arguments)
************* Module test_kinesis_stream
example_code/kinesis/test/test_kinesis_stream.py:1:0: R0801: Similar lines in 2 files
==dg_regexlog:[24:38]
==dg_stockticker:[26:40]
    }


def generate(stream_name, kinesis_client):
    while True:
        data = get_data()
        print(data)
        kinesis_client.put_record(
            StreamName=stream_name, Data=json.dumps(data), PartitionKey="partitionkey"
        )


if __name__ == "__main__":
    generate(STREAM_NAME, boto3.client("kinesis")) (duplicate-code)
example_code/kinesis/test/test_kinesis_stream.py:1:0: R0801: Similar lines in 2 files
==dg_columnlog:[25:35]
==dg_referrer:[25:35]
    while True:
        data = get_data()
        print(data)
        kinesis_client.put_record(
            StreamName=stream_name, Data=json.dumps(data), PartitionKey="partitionkey"
        )


if __name__ == "__main__":
    generate(STREAM_NAME, boto3.client("kinesis")) (duplicate-code)

-----------------------------------
Your code has been rated at 9.64/10

************* Module conftest
example_code/kms/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/kms/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_grant_management
example_code/kms/test/test_grant_management.py:23:0: R0913: Too many arguments (6/5) (too-many-arguments)

-----------------------------------
Your code has been rated at 9.73/10

************* Module conftest
example_code/lambda/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/lambda/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_api_gateway_rest
example_code/lambda/test/test_api_gateway_rest.py:27:0: R0914: Too many local variables (22/15) (too-many-locals)
************* Module test_scenario_getting_started_functions
example_code/lambda/test/test_scenario_getting_started_functions.py:37:0: R0914: Too many local variables (24/15) (too-many-locals)
************* Module test_scheduled_lambda
example_code/lambda/test/test_scheduled_lambda.py:24:0: R0914: Too many local variables (17/15) (too-many-locals)
example_code/lambda/test/test_scheduled_lambda.py:1:0: R0801: Similar lines in 2 files
==test_lambda_basics:[203:213]
==test_scenario_getting_started_functions:[53:62]
    funcs = [
        {
            "FunctionName": f"test-func-{index}",
            "Description": f"test description {index}",
            "Runtime": f"test-runtime-{index}",
            "Handler": f"test-handler-{index}",
        }
        for index in range(3)
    ] (duplicate-code)

-----------------------------------
Your code has been rated at 9.79/10

************* Module test.conftest
example_code/lookoutvision/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/lookoutvision/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/lookoutvision/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/lookoutvision/test/conftest.py:9:0: W0611: Unused import random (unused-import)
************* Module test.test_csv_to_manifest
example_code/lookoutvision/test/test_csv_to_manifest.py:7:0: W0105: String statement has no effect (pointless-string-statement)
************* Module test.test_datasets
example_code/lookoutvision/test/test_datasets.py:83:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/lookoutvision/test/test_datasets.py:147:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
************* Module test.test_export_datasets
example_code/lookoutvision/test/test_export_datasets.py:31:0: R0914: Too many local variables (22/15) (too-many-locals)
example_code/lookoutvision/test/test_export_datasets.py:179:0: R0914: Too many local variables (16/15) (too-many-locals)
example_code/lookoutvision/test/test_export_datasets.py:223:0: R0914: Too many local variables (21/15) (too-many-locals)
************* Module test.test_find_running_models
example_code/lookoutvision/test/test_find_running_models.py:26:0: R0914: Too many local variables (23/15) (too-many-locals)
example_code/lookoutvision/test/test_find_running_models.py:85:0: R0914: Too many local variables (27/15) (too-many-locals)
example_code/lookoutvision/test/test_find_running_models.py:11:0: W0611: Unused import models (unused-import)
example_code/lookoutvision/test/test_find_running_models.py:13:0: W0611: Unused Session imported from boto3.session (unused-import)
************* Module test.test_hello
example_code/lookoutvision/test/test_hello.py:25:4: W0612: Unused variable 'model_version' (unused-variable)
example_code/lookoutvision/test/test_hello.py:26:4: W0612: Unused variable 'dataset' (unused-variable)
************* Module test.test_inference
example_code/lookoutvision/test/test_inference.py:8:0: W4901: Deprecated module 'imghdr' (deprecated-module)
example_code/lookoutvision/test/test_inference.py:58:26: W0613: Unused argument 'make_stubber' (unused-argument)
example_code/lookoutvision/test/test_inference.py:74:34: W0613: Unused argument 'make_stubber' (unused-argument)
example_code/lookoutvision/test/test_inference.py:90:33: W0613: Unused argument 'make_stubber' (unused-argument)
example_code/lookoutvision/test/test_inference.py:119:28: W0613: Unused argument 'make_stubber' (unused-argument)
************* Module test.test_models
example_code/lookoutvision/test/test_models.py:48:0: R0914: Too many local variables (18/15) (too-many-locals)
************* Module test.test_projects
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_find_running_models:[47:62]
==test.test_models:[65:80]
            project_name,
            model_version,
            model_arn,
            status,
            {
                "description": description,
                "message": message,
                "created": created,
                "trained": trained,
                "recall": recall,
                "precision": precision,
                "f1": f1,
                "out_bucket": out_buck,
                "out_folder": out_folder,
            }, (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_find_tag:[32:42]
==test.test_hosting:[77:87]
    with stub_runner(error_code, stop_on_method) as runner:
        runner.add(lookoutvision_stubber.stub_list_projects, [project_name])
        runner.add(
            lookoutvision_stubber.stub_list_models, project_name, [model_version]
        )
        runner.add(
            lookoutvision_stubber.stub_describe_model,
            project_name,
            model_version,
            model_arn, (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_find_running_models:[34:43]
==test.test_models:[55:64]
    message = "Test message!"
    created = datetime.datetime.now()
    trained = created + datetime.timedelta(minutes=10)
    recall = 0.3
    precision = 0.5
    f1 = 0.7
    out_buck = "doc-example-bucket"
    out_folder = "test-folder"
 (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_hello:[19:27]
==test.test_projects:[67:75]
    lookoutvision_client = boto3.client("lookoutvision")
    lookoutvision_stubber = make_stubber(lookoutvision_client)
    project_name = "test-project"
    project_arn = "test-arn"
    created = datetime.datetime.now()
    model_version = "test-model"
    dataset = {"DatasetType": "testing", "StatusMessage": "nicely tested"}
 (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_find_running_models:[45:51]
==test.test_hosting:[82:88]
        runner.add(
            lookoutvision_stubber.stub_describe_model,
            project_name,
            model_version,
            model_arn,
            status, (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_find_running_models:[120:126]
==test.test_hello:[27:34]
    with stub_runner(error_code, stop_on_method) as runner:
        runner.add(
            lookoutvision_stubber.stub_list_projects,
            [project_name],
            [{"arn": project_arn, "created": created}],
        ) (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_hosting:[35:45]
==test.test_models:[43:52]
        assert exc_info.value.response["Error"]["Code"] == error_code


@pytest.mark.parametrize("error_code", [None, "TestException"])
def test_describe_model(make_stubber, error_code):
    lookoutvision_client = boto3.client("lookoutvision")
    lookoutvision_stubber = make_stubber(lookoutvision_client)
    project_name = "test-project_name"
    model_version = "test-model" (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_find_tag:[24:29]
==test.test_hosting:[70:75]
    lookoutvision_client = boto3.client("lookoutvision")
    lookoutvision_stubber = make_stubber(lookoutvision_client)
    project_name = "test-project"
    model_version = "test-model"
    model_arn = "test-arn" (duplicate-code)
example_code/lookoutvision/test/test_projects.py:1:0: R0801: Similar lines in 2 files
==test.test_find_running_models:[45:50]
==test.test_find_tag:[37:42]
        runner.add(
            lookoutvision_stubber.stub_describe_model,
            project_name,
            model_version,
            model_arn, (duplicate-code)

-----------------------------------
Your code has been rated at 9.49/10

************* Module conftest
example_code/medical-imaging/test/conftest.py:9:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/medical-imaging/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.92/10

************* Module conftest
example_code/organizations/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/organizations/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.73/10

************* Module conftest
example_code/pinpoint/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/pinpoint/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.79/10

************* Module conftest
example_code/pinpoint-sms-voice/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/pinpoint-sms-voice/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.17/10

************* Module conftest
example_code/polly/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/polly/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_polly_wrapper
example_code/polly/test/test_polly_wrapper.py:39:0: R0914: Too many local variables (16/15) (too-many-locals)
example_code/polly/test/test_polly_wrapper.py:96:0: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/polly/test/test_polly_wrapper.py:96:0: R0914: Too many local variables (30/15) (too-many-locals)
example_code/polly/test/test_polly_wrapper.py:125:30: C0103: Argument name "Fileobj" doesn't conform to snake_case naming style (invalid-name)
example_code/polly/test/test_polly_wrapper.py:125:0: W0613: Unused argument 'kwargs' (unused-argument)

-----------------------------------
Your code has been rated at 9.52/10

************* Module conftest
example_code/rds/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/rds/test/conftest.py:21:0: R0903: Too few public methods (0/2) (too-few-public-methods)
example_code/rds/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/rds/test/conftest.py:10:0: C0411: standard import "import uuid" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/rds/test/conftest.py:12:0: C0411: third party import "import boto3" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/rds/test/conftest.py:13:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/rds/test/conftest.py:14:0: C0411: third party import "import scenario_get_started_instances" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/rds/test/conftest.py:15:0: C0411: third party import "from instance_wrapper import InstanceWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_get_started_instances_cleanup
example_code/rds/test/test_get_started_instances_cleanup.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/rds/test/test_get_started_instances_cleanup.py:40:17: W0621: Redefining name 'mock_mgr' from outer scope (line 36) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_cleanup.py:58:23: W0621: Redefining name 'mock_mgr' from outer scope (line 36) (redefined-outer-name)
************* Module test_get_started_instances_create_instance
example_code/rds/test/test_get_started_instances_create_instance.py:8:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
example_code/rds/test/test_get_started_instances_create_instance.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/rds/test/test_get_started_instances_create_instance.py:83:31: W0621: Redefining name 'mock_mgr' from outer scope (line 79) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_create_instance.py:98:25: W0621: Redefining name 'mock_mgr' from outer scope (line 79) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_create_instance.py:123:31: W0621: Redefining name 'mock_mgr' from outer scope (line 79) (redefined-outer-name)
************* Module test_get_started_instances_create_parameter_group
example_code/rds/test/test_get_started_instances_create_parameter_group.py:8:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
example_code/rds/test/test_get_started_instances_create_parameter_group.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/rds/test/test_get_started_instances_create_parameter_group.py:51:38: W0621: Redefining name 'mock_mgr' from outer scope (line 47) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_create_parameter_group.py:68:32: W0621: Redefining name 'mock_mgr' from outer scope (line 47) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_create_parameter_group.py:92:38: W0621: Redefining name 'mock_mgr' from outer scope (line 47) (redefined-outer-name)
************* Module test_get_started_instances_create_snapshot
example_code/rds/test/test_get_started_instances_create_snapshot.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/rds/test/test_get_started_instances_create_snapshot.py:32:25: W0621: Redefining name 'mock_mgr' from outer scope (line 28) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_create_snapshot.py:48:31: W0621: Redefining name 'mock_mgr' from outer scope (line 28) (redefined-outer-name)
************* Module test_get_started_instances_update_parameters
example_code/rds/test/test_get_started_instances_update_parameters.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/rds/test/test_get_started_instances_update_parameters.py:50:27: W0621: Redefining name 'mock_mgr' from outer scope (line 46) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_update_parameters.py:68:33: W0621: Redefining name 'mock_mgr' from outer scope (line 46) (redefined-outer-name)
example_code/rds/test/test_get_started_instances_update_parameters.py:1:0: R0801: Similar lines in 2 files
==test_get_started_instances_cleanup:[13:21]
==test_get_started_instances_create_snapshot:[13:21]
        self.scenario_out = None
        answers = ["y"]
        input_mocker.mock_answers(answers)
        self.stub_runner = stub_runner

    def setup_stubs(self, error, stop_on, stubber):
        with self.stub_runner(error, stop_on) as runner:
            runner.add( (duplicate-code)

-----------------------------------
Your code has been rated at 8.71/10

************* Module conftest
example_code/rekognition/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/rekognition/test/conftest.py:95:17: W0621: Redefining name 'make_faces' from outer scope (line 19) (redefined-outer-name)
example_code/rekognition/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/rekognition/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/rekognition/test/conftest.py:12:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_custom_labels_csv_to_manifest
example_code/rekognition/test/test_custom_labels_csv_to_manifest.py:7:0: W0105: String statement has no effect (pointless-string-statement)
************* Module test_rekognition_collections
example_code/rekognition/test/test_rekognition_collections.py:177:36: W0613: Unused argument 'make_faces' (unused-argument)
************* Module test_rekognition_video_detection
example_code/rekognition/test/test_rekognition_video_detection.py:57:0: R0914: Too many local variables (20/15) (too-many-locals)
example_code/rekognition/test/test_rekognition_video_detection.py:130:0: R0914: Too many local variables (18/15) (too-many-locals)
example_code/rekognition/test/test_rekognition_video_detection.py:222:0: R0913: Too many arguments (7/5) (too-many-arguments)
example_code/rekognition/test/test_rekognition_video_detection.py:222:0: R0914: Too many local variables (16/15) (too-many-locals)
example_code/rekognition/test/test_rekognition_video_detection.py:273:0: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/rekognition/test/test_rekognition_video_detection.py:314:0: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/rekognition/test/test_rekognition_video_detection.py:355:0: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/rekognition/test/test_rekognition_video_detection.py:402:0: R0913: Too many arguments (6/5) (too-many-arguments)

-----------------------------------
Your code has been rated at 9.70/10

************* Module routing_control_states
example_code/route53-recovery-cluster/routing_control_states.py:91:15: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/route53-recovery-cluster/routing_control_states.py:67:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
example_code/route53-recovery-cluster/routing_control_states.py:117:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/route53-recovery-cluster/routing_control_states.py:132:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)

-----------------------------------
Your code has been rated at 9.13/10

************* Module demo_file_transfer
example_code/s3/file_transfer/demo_file_transfer.py:39:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
example_code/s3/file_transfer/demo_file_transfer.py:64:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
example_code/s3/file_transfer/demo_file_transfer.py:88:4: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/s3/file_transfer/demo_file_transfer.py:347:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
************* Module file_transfer
example_code/s3/file_transfer/file_transfer.py:51:35: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
example_code/s3/file_transfer/file_transfer.py:25:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module bucket_wrapper
example_code/s3/s3_basics/bucket_wrapper.py:96:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/bucket_wrapper.py:158:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/bucket_wrapper.py:197:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/bucket_wrapper.py:250:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/bucket_wrapper.py:312:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
************* Module demo_bucket_basics
example_code/s3/s3_basics/demo_bucket_basics.py:57:4: C0415: Import outside toplevel (argparse) (import-outside-toplevel)
example_code/s3/s3_basics/demo_bucket_basics.py:15:0: W0611: Unused import sys (unused-import)
************* Module object_wrapper
example_code/s3/s3_basics/object_wrapper.py:47:27: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
example_code/s3/s3_basics/object_wrapper.py:80:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/object_wrapper.py:109:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/object_wrapper.py:193:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/object_wrapper.py:271:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_basics/object_wrapper.py:315:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/s3/s3_basics/object_wrapper.py:324:10: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
************* Module presigned_url
example_code/s3/s3_basics/presigned_url.py:73:19: W3101: Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely (missing-timeout)
example_code/s3/s3_basics/presigned_url.py:77:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/s3/s3_basics/presigned_url.py:79:23: W3101: Missing timeout argument for method 'requests.put' can cause your program to hang indefinitely (missing-timeout)
************* Module scenario_getting_started
example_code/s3/s3_basics/scenario_getting_started.py:43:14: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/s3/s3_basics/scenario_getting_started.py:69:18: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/s3/s3_basics/scenario_getting_started.py:26:0: R0915: Too many statements (62/50) (too-many-statements)
************* Module batch_versioning
example_code/s3/s3_versioning/batch_versioning.py:221:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/s3/s3_versioning/batch_versioning.py:315:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
example_code/s3/s3_versioning/batch_versioning.py:472:0: R0914: Too many local variables (16/15) (too-many-locals)
example_code/s3/s3_versioning/batch_versioning.py:472:0: R0915: Too many statements (58/50) (too-many-statements)
************* Module remove_delete_marker
example_code/s3/s3_versioning/remove_delete_marker.py:100:11: W0718: Catching too general exception Exception (broad-exception-caught)
example_code/s3/s3_versioning/remove_delete_marker.py:84:16: W0621: Redefining name 'error' from outer scope (line 66) (redefined-outer-name)
example_code/s3/s3_versioning/remove_delete_marker.py:96:16: W0707: Consider explicitly re-raising using 'raise ValueError(f"The x-amz-delete-marker header is either not present or is not 'true'.") from error' (raise-missing-from)
example_code/s3/s3_versioning/remove_delete_marker.py:97:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/s3/s3_versioning/remove_delete_marker.py:22:26: W0613: Unused argument 'context' (unused-argument)
************* Module revise_stanza
example_code/s3/s3_versioning/revise_stanza.py:22:26: W0613: Unused argument 'context' (unused-argument)
************* Module versioning
example_code/s3/s3_versioning/versioning.py:232:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
example_code/s3/s3_versioning/versioning.py:1:0: R0801: Similar lines in 2 files
==remove_delete_marker:[104:118]
==revise_stanza:[87:101]
    finally:
        results.append(
            {
                "taskId": task_id,
                "resultCode": result_code,
                "resultString": result_string,
            }
        )
    return {
        "invocationSchemaVersion": invocation_schema_version,
        "treatMissingKeysAs": "PermanentFailure",
        "invocationId": invocation_id,
        "results": results,
    } (duplicate-code)
example_code/s3/s3_versioning/versioning.py:1:0: R0801: Similar lines in 2 files
==remove_delete_marker:[33:43]
==revise_stanza:[32:42]
    invocation_id = event["invocationId"]
    invocation_schema_version = event["invocationSchemaVersion"]

    results = []
    result_code = None
    result_string = None

    task = event["tasks"][0]
    task_id = task["taskId"]
    # The revision type is packed with the object key as a pipe-delimited string. (duplicate-code)
example_code/s3/s3_versioning/versioning.py:1:0: R0801: Similar lines in 2 files
==bucket_wrapper:[474:486]
==object_wrapper:[358:369]
    bucket.delete()
    print(f"Deleted bucket {bucket.name}.")
    print("Thanks for watching!")
    print("-" * 88)


# snippet-end:[python.example_code.s3.Scenario_ObjectManagement]


if __name__ == "__main__":
    usage_demo() (duplicate-code)

-----------------------------------
Your code has been rated at 9.67/10

************* Module conftest
example_code/secretsmanager/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/secretsmanager/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/secretsmanager/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/secretsmanager/test/conftest.py:9:0: W0611: Unused import random (unused-import)

-----------------------------------
Your code has been rated at 9.64/10

************* Module conftest
example_code/ses/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/ses/test/conftest.py:9:0: C0411: standard import "import random" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ses/test/conftest.py:10:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/ses/test/conftest.py:9:0: W0611: Unused import random (unused-import)
************* Module test_ses_replicate_identities
example_code/ses/test/test_ses_replicate_identities.py:181:34: W0613: Unused argument 'make_stubber' (unused-argument)
example_code/ses/test/test_ses_replicate_identities.py:223:0: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/ses/test/test_ses_replicate_identities.py:276:46: W0613: Unused argument 'stub_runner' (unused-argument)
example_code/ses/test/test_ses_replicate_identities.py:276:59: W0613: Unused argument 'error_code' (unused-argument)
example_code/ses/test/test_ses_replicate_identities.py:13:0: W0611: Unused import time (unused-import)
example_code/ses/test/test_ses_replicate_identities.py:20:0: W0611: Unused ANY imported from botocore.stub (unused-import)

-----------------------------------
Your code has been rated at 9.77/10

************* Module v4-signing-get-querystring
example_code/signv4/v4-signing-get-querystring.py:1:0: C0103: Module name "v4-signing-get-querystring" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:34:0: C0103: Constant name "method" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:35:0: C0103: Constant name "service" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:36:0: C0103: Constant name "host" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:37:0: C0103: Constant name "region" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:38:0: C0103: Constant name "endpoint" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:47:0: C0103: Function name "getSignatureKey" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:47:25: C0103: Argument name "dateStamp" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:47:36: C0103: Argument name "regionName" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:47:48: C0103: Argument name "serviceName" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:48:4: C0103: Variable name "kDate" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:49:4: C0103: Variable name "kRegion" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:50:4: C0103: Variable name "kService" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:51:4: C0103: Variable name "kSigning" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:80:0: C0103: Constant name "canonical_uri" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:88:0: C0103: Constant name "canonical_headers" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:89:0: C0103: Constant name "signed_headers" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:93:0: C0103: Constant name "algorithm" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:99:0: C0103: Constant name "canonical_querystring" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:110:0: C0103: Constant name "payload_hash" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-querystring.py:163:4: W3101: Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely (missing-timeout)
example_code/signv4/v4-signing-get-querystring.py:166:6: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module v4-signing-get-authheader
example_code/signv4/v4-signing-get-authheader.py:1:0: C0103: Module name "v4-signing-get-authheader" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:34:0: C0103: Constant name "method" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:35:0: C0103: Constant name "service" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:36:0: C0103: Constant name "host" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:37:0: C0103: Constant name "region" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:38:0: C0103: Constant name "endpoint" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:39:0: C0103: Constant name "request_parameters" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:48:0: C0103: Function name "getSignatureKey" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:48:25: C0103: Argument name "dateStamp" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:48:36: C0103: Argument name "regionName" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:48:48: C0103: Argument name "serviceName" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:49:4: C0103: Variable name "kDate" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:50:4: C0103: Variable name "kRegion" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:51:4: C0103: Variable name "kService" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:52:4: C0103: Variable name "kSigning" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:77:0: C0103: Constant name "canonical_uri" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:83:0: C0103: Constant name "canonical_querystring" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:95:0: C0103: Constant name "signed_headers" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:99:0: C0103: Constant name "payload_hash" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:120:0: C0103: Constant name "algorithm" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:170:0: C0103: Constant name "request_url" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-authheader.py:174:4: W3101: Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely (missing-timeout)
example_code/signv4/v4-signing-get-authheader.py:177:6: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/signv4/v4-signing-get-authheader.py:20:0: W0611: Unused import base64 (unused-import)
************* Module v4-signing-get-post
example_code/signv4/v4-signing-get-post.py:1:0: C0103: Module name "v4-signing-get-post" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:35:0: C0103: Constant name "method" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:36:0: C0103: Constant name "service" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:37:0: C0103: Constant name "host" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:38:0: C0103: Constant name "region" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:39:0: C0103: Constant name "endpoint" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:42:0: C0103: Constant name "content_type" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:45:0: C0103: Constant name "amz_target" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:48:0: C0103: Constant name "request_parameters" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:63:0: C0103: Function name "getSignatureKey" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:63:37: C0103: Argument name "regionName" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:63:49: C0103: Argument name "serviceName" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:63:25: W0621: Redefining name 'date_stamp' from outer scope (line 82) (redefined-outer-name)
example_code/signv4/v4-signing-get-post.py:64:4: C0103: Variable name "kDate" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:65:4: C0103: Variable name "kRegion" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:66:4: C0103: Variable name "kService" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:67:4: C0103: Variable name "kSigning" doesn't conform to snake_case naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:92:0: C0103: Constant name "canonical_uri" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:97:0: C0103: Constant name "canonical_querystring" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:123:0: C0103: Constant name "signed_headers" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:127:0: C0103: Constant name "payload_hash" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:148:0: C0103: Constant name "algorithm" doesn't conform to UPPER_CASE naming style (invalid-name)
example_code/signv4/v4-signing-get-post.py:204:4: W3101: Missing timeout argument for method 'requests.post' can cause your program to hang indefinitely (missing-timeout)
example_code/signv4/v4-signing-get-post.py:207:6: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
example_code/signv4/v4-signing-get-post.py:20:0: W0611: Unused import base64 (unused-import)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-authheader:[136:165]
==v4-signing-get-post:[164:191]
signature = hmac.new(
    signing_key, (string_to_sign).encode("utf-8"), hashlib.sha256
).hexdigest()


# ************* TASK 4: ADD SIGNING INFORMATION TO THE REQUEST *************
# Put the signature information in a header named Authorization.
authorization_header = (
    algorithm
    + " "
    + "Credential="
    + access_key
    + "/"
    + credential_scope
    + ", "
    + "SignedHeaders="
    + signed_headers
    + ", "
    + "Signature="
    + signature
)

# For DynamoDB, the request can include any headers, but MUST include "host", "x-amz-date",
# "x-amz-target", "content-type", and "Authorization". Except for the authorization
# header, the headers must be included in the canonical_headers and signed_headers values, as
# noted earlier. Order here is not significant.
# # Python note: The 'host' header is added automatically by the Python 'requests' library. (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-authheader:[101:120]
==v4-signing-get-post:[129:148]
canonical_request = (
    method
    + "\n"
    + canonical_uri
    + "\n"
    + canonical_querystring
    + "\n"
    + canonical_headers
    + "\n"
    + signed_headers
    + "\n"
    + payload_hash
)


# ************* TASK 2: CREATE THE STRING TO SIGN*************
# Match the algorithm to the hashing algorithm you use, either SHA-1 or
# SHA-256 (recommended)
algorithm = "AWS4-HMAC-SHA256" (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-authheader:[98:119]
==v4-signing-get-querystring:[109:128]
payload_hash = hashlib.sha256(("").encode("utf-8")).hexdigest()

# Step 7: Combine elements to create canonical request
canonical_request = (
    method
    + "\n"
    + canonical_uri
    + "\n"
    + canonical_querystring
    + "\n"
    + canonical_headers
    + "\n"
    + signed_headers
    + "\n"
    + payload_hash
)


# ************* TASK 2: CREATE THE STRING TO SIGN*************
# Match the algorithm to the hashing algorithm you use, either SHA-1 or
# SHA-256 (recommended) (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-post:[129:147]
==v4-signing-get-querystring:[112:128]
canonical_request = (
    method
    + "\n"
    + canonical_uri
    + "\n"
    + canonical_querystring
    + "\n"
    + canonical_headers
    + "\n"
    + signed_headers
    + "\n"
    + payload_hash
)


# ************* TASK 2: CREATE THE STRING TO SIGN*************
# Match the algorithm to the hashing algorithm you use, either SHA-1 or
# SHA-256 (recommended) (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-authheader:[44:65]
==v4-signing-get-querystring:[43:64]
    return hmac.new(key, msg.encode("utf-8"), hashlib.sha256).digest()


def getSignatureKey(key, dateStamp, regionName, serviceName):
    kDate = sign(("AWS4" + key).encode("utf-8"), dateStamp)
    kRegion = sign(kDate, regionName)
    kService = sign(kRegion, serviceName)
    kSigning = sign(kService, "aws4_request")
    return kSigning


# Read AWS access key from env. variables or configuration file. Best practice is NOT
# to embed credentials in code.
access_key = os.environ.get("AWS_ACCESS_KEY_ID")
secret_key = os.environ.get("AWS_SECRET_ACCESS_KEY")
if access_key is None or secret_key is None:
    print("No access key is available.")
    sys.exit()

# Create a date for headers and the credential string
t = datetime.datetime.utcnow() (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-post:[64:81]
==v4-signing-get-querystring:[48:65]
    kRegion = sign(kDate, regionName)
    kService = sign(kRegion, serviceName)
    kSigning = sign(kService, "aws4_request")
    return kSigning


# Read AWS access key from env. variables or configuration file. Best practice is NOT
# to embed credentials in code.
access_key = os.environ.get("AWS_ACCESS_KEY_ID")
secret_key = os.environ.get("AWS_SECRET_ACCESS_KEY")
if access_key is None or secret_key is None:
    print("No access key is available.")
    sys.exit()

# Create a date for headers and the credential string
t = datetime.datetime.utcnow()
amz_date = t.strftime("%Y%m%dT%H%M%SZ") (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-authheader:[49:65]
==v4-signing-get-post:[64:80]
    kRegion = sign(kDate, regionName)
    kService = sign(kRegion, serviceName)
    kSigning = sign(kService, "aws4_request")
    return kSigning


# Read AWS access key from env. variables or configuration file. Best practice is NOT
# to embed credentials in code.
access_key = os.environ.get("AWS_ACCESS_KEY_ID")
secret_key = os.environ.get("AWS_SECRET_ACCESS_KEY")
if access_key is None or secret_key is None:
    print("No access key is available.")
    sys.exit()

# Create a date for headers and the credential string
t = datetime.datetime.utcnow() (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-post:[149:161]
==v4-signing-get-querystring:[128:140]
string_to_sign = (
    algorithm
    + "\n"
    + amz_date
    + "\n"
    + credential_scope
    + "\n"
    + hashlib.sha256(canonical_request.encode("utf-8")).hexdigest()
)

# ************* TASK 3: CALCULATE THE SIGNATURE *************
# Create the signing key using the function defined above. (duplicate-code)
example_code/signv4/v4-signing-get-post.py:1:0: R0801: Similar lines in 2 files
==v4-signing-get-authheader:[125:145]
==v4-signing-get-querystring:[132:152]
    + "\n"
    + credential_scope
    + "\n"
    + hashlib.sha256(canonical_request.encode("utf-8")).hexdigest()
)

# ************* TASK 3: CALCULATE THE SIGNATURE *************
# Create the signing key
signing_key = getSignatureKey(secret_key, datestamp, region, service)

# Sign the string_to_sign using the signing_key
signature = hmac.new(
    signing_key, (string_to_sign).encode("utf-8"), hashlib.sha256
).hexdigest()


# ************* TASK 4: ADD SIGNING INFORMATION TO THE REQUEST *************
# The auth information can be either in a query string
# value or in a header named Authorization. This code shows how to put
# everything into a query string. (duplicate-code)

-----------------------------------
Your code has been rated at 4.84/10

************* Module conftest
example_code/sns/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/sns/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_sns_fifo_topic
example_code/sns/test/test_sns_fifo_topic.py:8:0: W0611: Unused import json (unused-import)
example_code/sns/test/test_sns_fifo_topic.py:13:0: W0611: Unused ANY imported from botocore.stub (unused-import)

-----------------------------------
Your code has been rated at 9.81/10

************* Module conftest
example_code/sqs/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/sqs/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/sqs/test/conftest.py:11:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_message_wrapper
example_code/sqs/test/test_message_wrapper.py:220:11: R1729: Use a generator instead 'all(failed['Code'] == 'ReceiptHandleIsInvalid' for failed in response['Failed'])' (use-a-generator)

-----------------------------------
Your code has been rated at 9.82/10

************* Module conftest
example_code/stepfunctions/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/stepfunctions/test/conftest.py:21:0: R0903: Too few public methods (0/2) (too-few-public-methods)
example_code/stepfunctions/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/stepfunctions/test/conftest.py:11:0: C0411: third party import "import boto3" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/stepfunctions/test/conftest.py:12:0: C0411: third party import "import get_started_state_machines" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/stepfunctions/test/conftest.py:13:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/stepfunctions/test/conftest.py:14:0: C0411: third party import "from activities import Activity" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/stepfunctions/test/conftest.py:15:0: C0411: third party import "from state_machines import StateMachine" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_cleanup
example_code/stepfunctions/test/test_cleanup.py:8:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
example_code/stepfunctions/test/test_cleanup.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/stepfunctions/test/test_cleanup.py:43:17: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
example_code/stepfunctions/test/test_cleanup.py:61:23: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
************* Module test_find_or_create_activity
example_code/stepfunctions/test/test_find_or_create_activity.py:11:51: W0613: Unused argument 'input_mocker' (unused-argument)
example_code/stepfunctions/test/test_find_or_create_activity.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/stepfunctions/test/test_find_or_create_activity.py:44:33: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
example_code/stepfunctions/test/test_find_or_create_activity.py:64:39: W0621: Redefining name 'mock_mgr' from outer scope (line 39) (redefined-outer-name)
************* Module test_find_or_create_state_machine
example_code/stepfunctions/test/test_find_or_create_state_machine.py:11:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
example_code/stepfunctions/test/test_find_or_create_state_machine.py:12:51: W0613: Unused argument 'input_mocker' (unused-argument)
example_code/stepfunctions/test/test_find_or_create_state_machine.py:11:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/stepfunctions/test/test_find_or_create_state_machine.py:61:38: W0621: Redefining name 'mock_mgr' from outer scope (line 56) (redefined-outer-name)
example_code/stepfunctions/test/test_find_or_create_state_machine.py:87:44: W0621: Redefining name 'mock_mgr' from outer scope (line 56) (redefined-outer-name)
example_code/stepfunctions/test/test_find_or_create_state_machine.py:91:77: W0612: Unused variable 'mock_file' (unused-variable)
example_code/stepfunctions/test/test_find_or_create_state_machine.py:4:0: W0611: Unused import json (unused-import)
************* Module test_finish_state_machine_run
example_code/stepfunctions/test/test_finish_state_machine_run.py:13:23: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/stepfunctions/test/test_finish_state_machine_run.py:14:22: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/stepfunctions/test/test_finish_state_machine_run.py:11:51: W0613: Unused argument 'input_mocker' (unused-argument)
example_code/stepfunctions/test/test_finish_state_machine_run.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/stepfunctions/test/test_finish_state_machine_run.py:41:34: W0621: Redefining name 'mock_mgr' from outer scope (line 37) (redefined-outer-name)
example_code/stepfunctions/test/test_finish_state_machine_run.py:58:40: W0621: Redefining name 'mock_mgr' from outer scope (line 37) (redefined-outer-name)
************* Module test_get_started_state_machines_integ
example_code/stepfunctions/test/test_get_started_state_machines_integ.py:12:14: W0613: Unused argument 'monkeypatch' (unused-argument)
************* Module test_prerequisites
example_code/stepfunctions/test/test_prerequisites.py:9:51: W0613: Unused argument 'input_mocker' (unused-argument)
example_code/stepfunctions/test/test_prerequisites.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/stepfunctions/test/test_prerequisites.py:36:23: W0621: Redefining name 'mock_mgr' from outer scope (line 31) (redefined-outer-name)
example_code/stepfunctions/test/test_prerequisites.py:36:33: W0613: Unused argument 'capsys' (unused-argument)
example_code/stepfunctions/test/test_prerequisites.py:58:29: W0621: Redefining name 'mock_mgr' from outer scope (line 31) (redefined-outer-name)
************* Module test_run_state_machine
example_code/stepfunctions/test/test_run_state_machine.py:10:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
example_code/stepfunctions/test/test_run_state_machine.py:13:22: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/stepfunctions/test/test_run_state_machine.py:15:23: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
example_code/stepfunctions/test/test_run_state_machine.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/stepfunctions/test/test_run_state_machine.py:52:27: W0621: Redefining name 'mock_mgr' from outer scope (line 48) (redefined-outer-name)
example_code/stepfunctions/test/test_run_state_machine.py:72:33: W0621: Redefining name 'mock_mgr' from outer scope (line 48) (redefined-outer-name)

-----------------------------------
Your code has been rated at 8.31/10

************* Module conftest
example_code/sts/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/sts/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/sts/test/conftest.py:11:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_session_token
example_code/sts/test/test_session_token.py:8:0: W0611: Unused import json (unused-import)
example_code/sts/test/test_session_token.py:13:0: W0611: Unused import pytest (unused-import)
example_code/sts/test/test_session_token.py:14:0: W0611: Unused import requests (unused-import)
example_code/sts/test/test_session_token.py:16:0: W0611: Unused ClientError imported from botocore.exceptions (unused-import)
example_code/sts/test/test_session_token.py:1:0: R0801: Similar lines in 2 files
==test_assume_role_mfa:[126:140]
==test_session_token:[80:94]
    iam_stubber.stub_list_user_policies(
        user_name, [pol.policy_name for pol in user_policies]
    )
    for pol in user_policies:
        iam_stubber.stub_delete_user_policy(user_name, pol.policy_name)
    iam_stubber.stub_list_access_keys(user_name, user_key_ids)
    for key_id in user_key_ids:
        iam_stubber.stub_delete_access_key(user_name, key_id)
    iam_stubber.stub_list_mfa_devices(user_name, mfa_serials)
    for mfa_serial in mfa_serials:
        iam_stubber.stub_deactivate_mfa_device(user_name, mfa_serial)
        iam_stubber.stub_delete_virtual_mfa_device(mfa_serial)
    iam_stubber.stub_delete_user(user_name)
 (duplicate-code)
example_code/sts/test/test_session_token.py:1:0: R0801: Similar lines in 2 files
==test_assume_role_mfa:[81:93]
==test_session_token:[52:64]
    mfa_serial_number = "arn:aws:iam::123456789012:mfa/test-mfa"
    mfa_totp = "123456"
    buckets = [unittest.mock.MagicMock(), unittest.mock.MagicMock()]
    for b in buckets:
        b.name = "test-bucket"

    monkeypatch.setattr(
        boto3,
        "resource",
        lambda x, aws_access_key_id, aws_secret_access_key, aws_session_token: s3,
    )
 (duplicate-code)
example_code/sts/test/test_session_token.py:1:0: R0801: Similar lines in 2 files
==test_assume_role_mfa:[31:40]
==test_session_token:[30:39]
    monkeypatch.setattr(webbrowser, "open", lambda x: None)
    monkeypatch.setattr("builtins.input", lambda x: mock_code)

    iam_stubber.stub_create_user(unique_names["user"])
    iam_stubber.stub_create_virtual_mfa_device(mock_mfa)
    iam_stubber.stub_enable_mfa_device(
        unique_names["user"], mock_mfa.serial_number, mock_code, mock_code
    )
    iam_stubber.stub_create_access_key(unique_names["user"]) (duplicate-code)
example_code/sts/test/test_session_token.py:1:0: R0801: Similar lines in 2 files
==test_assume_role_mfa:[22:29]
==test_session_token:[21:28]
    mock_mfa = unittest.mock.MagicMock(
        device_name=unique_names["mfa"],
        serial_number="test-serial-number",
        qr_code_png=b"png",
    )
    mock_code = "123456"
 (duplicate-code)

-----------------------------------
Your code has been rated at 9.44/10

************* Module conftest
example_code/support/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/support/test/conftest.py:20:0: R0903: Too few public methods (0/2) (too-few-public-methods)
example_code/support/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/support/test/conftest.py:11:0: C0411: third party import "import boto3" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/support/test/conftest.py:12:0: C0411: third party import "import get_started_support_cases" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/support/test/conftest.py:13:0: C0411: third party import "import pytest" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
example_code/support/test/conftest.py:14:0: C0411: third party import "from support_wrapper import SupportWrapper" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_add_communication
example_code/support/test/test_add_communication.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_add_communication.py:32:27: W0621: Redefining name 'mock_mgr' from outer scope (line 28) (redefined-outer-name)
example_code/support/test/test_add_communication.py:45:33: W0621: Redefining name 'mock_mgr' from outer scope (line 28) (redefined-outer-name)
************* Module test_create_attachment_set
example_code/support/test/test_create_attachment_set.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_create_attachment_set.py:27:31: W0621: Redefining name 'mock_mgr' from outer scope (line 23) (redefined-outer-name)
example_code/support/test/test_create_attachment_set.py:39:23: W0621: Redefining name 'mock_mgr' from outer scope (line 23) (redefined-outer-name)
************* Module test_create_case
example_code/support/test/test_create_case.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_create_case.py:36:21: W0621: Redefining name 'mock_mgr' from outer scope (line 32) (redefined-outer-name)
example_code/support/test/test_create_case.py:48:23: W0621: Redefining name 'mock_mgr' from outer scope (line 32) (redefined-outer-name)
************* Module test_describe_attachment
example_code/support/test/test_describe_attachment.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_describe_attachment.py:30:29: W0621: Redefining name 'mock_mgr' from outer scope (line 26) (redefined-outer-name)
example_code/support/test/test_describe_attachment.py:42:40: W0621: Redefining name 'mock_mgr' from outer scope (line 26) (redefined-outer-name)
************* Module test_describe_cases
example_code/support/test/test_describe_cases.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_describe_cases.py:29:33: W0621: Redefining name 'mock_mgr' from outer scope (line 25) (redefined-outer-name)
example_code/support/test/test_describe_cases.py:45:21: W0621: Redefining name 'mock_mgr' from outer scope (line 25) (redefined-outer-name)
************* Module test_get_started_support_cases_integ
example_code/support/test/test_get_started_support_cases_integ.py:11:14: W0613: Unused argument 'monkeypatch' (unused-argument)
************* Module test_list_communications
example_code/support/test/test_list_communications.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_list_communications.py:38:29: W0621: Redefining name 'mock_mgr' from outer scope (line 34) (redefined-outer-name)
example_code/support/test/test_list_communications.py:51:35: W0621: Redefining name 'mock_mgr' from outer scope (line 34) (redefined-outer-name)
************* Module test_resolve_case
example_code/support/test/test_resolve_case.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_resolve_case.py:28:22: W0621: Redefining name 'mock_mgr' from outer scope (line 24) (redefined-outer-name)
example_code/support/test/test_resolve_case.py:39:28: W0621: Redefining name 'mock_mgr' from outer scope (line 24) (redefined-outer-name)
************* Module test_select_service
example_code/support/test/test_select_service.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_select_service.py:35:36: W0621: Redefining name 'mock_mgr' from outer scope (line 31) (redefined-outer-name)
example_code/support/test/test_select_service.py:45:37: W0621: Redefining name 'mock_mgr' from outer scope (line 31) (redefined-outer-name)
example_code/support/test/test_select_service.py:62:24: W0621: Redefining name 'mock_mgr' from outer scope (line 31) (redefined-outer-name)
************* Module test_select_severity
example_code/support/test/test_select_severity.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
example_code/support/test/test_select_severity.py:29:37: W0621: Redefining name 'mock_mgr' from outer scope (line 25) (redefined-outer-name)
example_code/support/test/test_select_severity.py:45:24: W0621: Redefining name 'mock_mgr' from outer scope (line 25) (redefined-outer-name)
example_code/support/test/test_select_severity.py:1:0: R0801: Similar lines in 2 files
==test_list_communications:[20:27]
==test_resolve_case:[12:19]
        self.scenario_args = [self.case_id]
        answers = []
        input_mocker.mock_answers(answers)
        self.stub_runner = stub_runner

    def setup_stubs(self, error, stop_on, stubber):
        with self.stub_runner(error, stop_on) as runner: (duplicate-code)
example_code/support/test/test_select_severity.py:1:0: R0801: Similar lines in 2 files
==test_describe_attachment:[13:20]
==test_list_communications:[21:28]
        answers = []
        input_mocker.mock_answers(answers)
        self.stub_runner = stub_runner

    def setup_stubs(self, error, stop_on, stubber):
        with self.stub_runner(error, stop_on) as runner:
            runner.add( (duplicate-code)
example_code/support/test/test_select_severity.py:1:0: R0801: Similar lines in 2 files
==test_create_attachment_set:[11:18]
==test_describe_cases:[13:20]
        self.scenario_args = []
        answers = []
        input_mocker.mock_answers(answers)
        self.stub_runner = stub_runner

    def setup_stubs(self, error, stop_on, stubber):
        with self.stub_runner(error, stop_on) as runner: (duplicate-code)
example_code/support/test/test_select_severity.py:1:0: R0801: Similar lines in 2 files
==test_add_communication:[13:20]
==test_create_case:[15:22]
        answers = []
        input_mocker.mock_answers(answers)
        self.stub_runner = stub_runner

    def setup_stubs(self, error, stop_on, stubber):
        with self.stub_runner(error, stop_on) as runner:
            runner.add( (duplicate-code)

-----------------------------------
Your code has been rated at 8.61/10

************* Module conftest
example_code/textract/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/textract/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)
************* Module test_textract_wrapper
example_code/textract/test/test_textract_wrapper.py:27:18: W0613: Unused argument 'monkeypatch' (unused-argument)
example_code/textract/test/test_textract_wrapper.py:91:20: C0103: Argument name "Fileobj" doesn't conform to snake_case naming style (invalid-name)
example_code/textract/test/test_textract_wrapper.py:91:29: C0103: Argument name "Bucket" doesn't conform to snake_case naming style (invalid-name)
example_code/textract/test/test_textract_wrapper.py:91:37: C0103: Argument name "Key" doesn't conform to snake_case naming style (invalid-name)
example_code/textract/test/test_textract_wrapper.py:91:42: C0103: Argument name "ExtraArgs" doesn't conform to snake_case naming style (invalid-name)
example_code/textract/test/test_textract_wrapper.py:91:53: C0103: Argument name "Callback" doesn't conform to snake_case naming style (invalid-name)
example_code/textract/test/test_textract_wrapper.py:91:63: C0103: Argument name "Config" doesn't conform to snake_case naming style (invalid-name)
example_code/textract/test/test_textract_wrapper.py:91:4: R0913: Too many arguments (6/5) (too-many-arguments)
example_code/textract/test/test_textract_wrapper.py:91:42: W0613: Unused argument 'ExtraArgs' (unused-argument)
example_code/textract/test/test_textract_wrapper.py:91:53: W0613: Unused argument 'Callback' (unused-argument)
example_code/textract/test/test_textract_wrapper.py:91:63: W0613: Unused argument 'Config' (unused-argument)

------------------------------------------------------------------
Your code has been rated at 9.04/10 (previous run: 9.07/10, -0.03)

************* Module conftest
example_code/transcribe/test/conftest.py:8:0: W0401: Wildcard import test_tools.fixtures.common (wildcard-import)
example_code/transcribe/test/conftest.py:9:0: C0411: standard import "import sys" should be placed before "from test_tools.fixtures.common import *" (wrong-import-order)

-----------------------------------
Your code has been rated at 9.85/10

