{
  "Comment": "A description of my state machine",
  "StartAt": "ExtractText",
  "States": {
    "ExtractText": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "ResultPath": "$.extracted_text",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:260778392212:function:ExtractText:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "AnalyzeSentiment"
    },
    "AnalyzeSentiment": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "InputPath": "$.extracted_text",
      "ResultPath": "$.sentiment_analysis",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:260778392212:function:AnalyzeSentiment:$LATEST",
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "ContinueIfPositive"
    },
    "ContinueIfPositive": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.sentiment_analysis['Payload']",
          "StringEquals": "NEGATIVE",
          "Next": "TranslateText"
        }
      ],
      "Default": "CreateComment"
    },
    "TranslateText": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "InputPath": "$.extracted_text",
      "ResultPath": "$.translated_text",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:260778392212:function:TranslateText:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "SynthesizeAudio"
    },
    "SynthesizeAudio": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "InputPath": "$.translated_text",
      "ResultPath": "$.synthesized_audio",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:260778392212:function:SynthesizeAudio:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 7,
          "BackoffRate": 2
        }
      ],
      "Next": "CreateComment"
    },
    "CreateComment": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "InputPath": "$",
      "Parameters": {
        "TableName": "comments",
        "Item": {
          "id.$": "$.id",
          "object_key.$": "$.detail.object.key",
          "raw_text.$": "$.extracted_text.Payload",
          "sentiment.$": "$.sentiment_analysis.Payload",
          "translated_text.$": "$.translated_text.Payload.translated_text",
          "raw_language.$": "$.translated_text.Payload.source_language_code",
          "raw_recording": ""
        }
      },
      "End": true
    }
  }
}